<?xml version="1.0"?>
<!-- TEMPLATE -->
<!-- <post>
    <title></title>
    <subtitle></subtitle>
    <author>
        <first_name></first_name>
        <last_name></last_name>
        <email></email>
    </author>
    <contributors>
        <user>
            <first_name></first_name>
            <last_name></last_name>
            <email></email>
        </user>
    </contributors>
    <theme></theme>
    <topics>
        <topic_name></topic_name>
    </topics>
    <tags>
        <tag_name></tag_name>
    </tags>
    <post_order></post_order>
    <cover_img_link></cover_img_link>
    <content></content>
</post> -->
<post_feed>

    <post>
        <title>Welcome To Project</title>
        <subtitle>Introduction to the Capstone</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>0</post_order>
        <cover_img_link></cover_img_link>
        <content>
            <p>This project is in fulfillment for Eastern University's DTSC691, the Applied Captstone for MS in Data Science, term Spring2 2022. Lucas E Moyer is submitting this website and all it's underlying code and database to satisfy the requirements for the Database track, approved by Dr. Gregory Longo.</p>
        </content>
    </post>
    <post>
        <title>Capstone Goals</title>
        <subtitle>What are we trying to accomplish?</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>1</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Fundamentally, my purpose is to create a functional website using a database for all content. The website hosts multiple blogs (called topics) by multiple authors and contributors. Viewers can access public topics, subscription topics, and private topics based on their level of authentication. The site will display sufficient pages and links to navigate content and authors, including available topics, tags, and posts.
<p>Viewers will be able to simulate roles and logins through a dropdown at the top of the site. By selecting their role, they see what one may see under a similar logged-in experience.</p>
<p>In addition, there is a dashboard for administrators to see visualized stats from visits, revenue, and subscribers. The public viewers of this project app will not be able to view these dashboards unless they switch to administrator.</p> 
<p>I also feature a simplistic search page, to find content in the blogs and display links.</p>
<p>This project is inspired by my previous work in web development and web hosting. I have desired for many years now to create my own template-style service for my clients. Such a project as this can easily be converted into my actual website creation workflow. I will not create the UX for user management for this project. I will focus instead on Database creation, access, and functional server delivery. </p>
<p>At the time of submission, the server must be locally hosted, although the database is successfully hosted through my own shared servers. The video walkthrough will show the functional features of the website while running on my machine. When uploading projects of this sort, there are too many bugs related to server requirements and malware protection for me to make part of this submission. However, once sufficient bugs are worked out, it will be made public as a portfolio through my personal website.</p>
        </content>
    </post>
<post>
        <title>Project Limitations</title>
        <subtitle>I can't do everything</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>2</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Although the final application of the project will be as a personal portfolio and potential website hosting platform for my personal business, this submission is not hosted on the internet. The server is locally hosted with Flask. The Database itself is hosted on my servers. Permissions for access will be displayed at the appropriate location in the coding process below. This access is only intended for the reviewers of this project as required for the Capstone evaluation. Production of this project would hide these parameters (it is currently hidden from my .git files). </p>
<p>The project can be fully replicated by following the instructions at the end of this document called “Building the Project” </p>
<p>Further, this "portfolio-like" project does not intend to handle:</p>
<ul><li>security logins</li>
<li>search sanitizing</li>
<li>automatic emails</li>
<li>financial transactions</li>
<li>subscription collections</li>
<li>statistics gathering</li></ul>
<p>A basis for these is prepared for, and the format for use is existent. </p>
<p>Review</p>
<p>We have built expectations for our project. Below we will:</p> 
<li>Create expectations for the Database</li>
<li>Create ER Diagram and ER Model for our intentions</li>
<li>Create DDL and DML statements to get the Database up and running</li>
<li>Create Queries to fall back on in order to create the website population and dashboard</li></ul>
        </content>
    </post>
<post>
        <title>Data Description</title>
        <subtitle>Where is our data coming from?</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>3</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>The data for populating the project comes from the creation process itself. This document, with its sections, are used as the “Project” topic blog. All required components, including authors, themes, page views, emails, subscribers, and revenue data are self generated as described below. </p>
<p>The exception to this is dummy Lorem Ipsum content generated for the public, subscription, and private blogs. I use www.lipsum.org  to generate blocks of text for those blogs. The content is duplicated for each blog. The purpose is to create material viewable only by certain audiences. </p>
<p>Summary of types of data used:</p>
<ul><li>Self generated through code. Random strings and random numbers used for populating views and subscriptions</li>
<li>Written from SQL statements. Following the _innit_ database creation, I have an INSERTS file which generates enough components to get up and running</li> 
<li>Written in XML. The articles and their metadata are written in xml, and read through python to insert all components into the existing database</li>
<li>Copied from lipsum.org dummy generator. Dummy content for public, subscription, and private topics/blogs</li> </ul>
        </content>
    </post> 

<post>
        <title>Data Requirements</title>
        <subtitle>Defining the kind of Database we want</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>4</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Here are the data requirements I used to map the database:</p>
<ul><li>Many Authors may write many articles</li>
<li>Many Articles can be written by only one author (Article total participation)</li>
<li>Many Articles can be assigned only one date of publication</li>
<li>Many Articles by be co-written/edited by many contributors </li>
<li>Many roles can view many articles</li>
<li>Many subscribers can view many topics of articles (subscriber total participation)</li>
<li>Many proprietary topics can be viewed by only premium subscribers</li>
<li>Every Article must have at least one Category (default applies)</li>
<li>All articles can have any number of tags</li>
<li>Every Tag must have at least one article</li>
<li>Every Subscription must have a Revenue transaction</li>
<li>Each transaction can be linked to only one subscriber</li>
<li>Every post must have only one page template (default applies)</li>
<li>Every post must have only one theme (default applies)</li></ul>

<p>Constraints:</p>
<p>Tables:</p>
<p>Entity Sets: </p>
<ul><li>Users (ID, Name [first, last], Date (of employment)[datetime], email, {Role}, Biography)</li>
<li>Post(ID, Title, Subtitle, Date,theme,page_type,post_order, Content,cover_image)</li>
<li>Topics(ID, Title, Status, Description)</li>
<li>Subscriber(Email, Activity_status)</li>
<li>Tags(ID, Name)</li>
<li>Revenue(sub_email, Amount, Date[datetime])</li>
<li>Stats(article_ID, IP_address, visit_date[datetime])</li>
<li>Theme(theme_id, Name, Color1,Color2,TextColor, Format, Font)</li>
<li>Page_type(Name, template_link)</li></ul>
<p>Relationships:</p>
<ul><li>Writes (author_ID,article_ID,updated(datatime))</li>
<li>Contributes (contributor,article_ID)</li>
<li>Topic_Post (topic_name, article_ID)</li>
<li>Subscribes (sub_email,topic_name,membership,date(datetime),renewed_date(datetime))</li></ul>
<p>Function:</p>
<ul><li>Sort calls to subscription type (subscriber or premium) and return as premium if previously premium or subscriber is in yearly anniversary of original subscription</li></ul>
<p>Views:</p>
<ul><li>Administrative view to see sum posts and revenue amount by author</li></ul>

        </content>
    </post> 


<post>
        <title>ER Model and Diagram</title>
        <subtitle>Visualizing what we will want</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>5</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Lucid.app Model:</p>
<a href="https://lucid.app/lucidchart/caa6739f-69f9-4d41-b5fe-7b8222c443dc/edit?invitationId=inv_b1e80131-73a2-4a37-b60d-0d34f2463fdb">Lucidapp Model</a>
<p>Duplicated link text: https://lucid.app/lucidchart/caa6739f-69f9-4d41-b5fe-7b8222c443dc/edit?invitationId=inv_b1e80131-73a2-4a37-b60d-0d34f2463fdb </p>
<img src=" {{ url_for('static', filename='/img/ERModel.png') }} ">
<br>
<p>Lucid.app Diagram:</p>
<a href="https://lucid.app/lucidchart/8deaf70f-edfc-460a-a3e8-70dc6f8bf5be/edit?invitationId=inv_a5dd1ee3-dc53-4fdf-9a21-c50e86730d93">Lucidapp Diagram</a>
<p>https://lucid.app/lucidchart/8deaf70f-edfc-460a-a3e8-70dc6f8bf5be/edit?invitationId=inv_a5dd1ee3-dc53-4fdf-9a21-c50e86730d93</p>
<img src=" {{ url_for('static', filename='/img/ERDiagram.png') }} ">
        </content>
    </post> 

<post>
        <title>SQL DDL</title>
        <subtitle>Creating the Database Structure</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>6</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Here are the Database creation statements copied from `capstone_ini.sql` file provided in the .zip submission:</p>

<pre>
CREATE DATABASE     Capstone;

--- Creating the Entity tables ---


CREATE TABLE Users (
        ID           SMALLINT NOT NULL AUTO_INCREMENT,
        first_name        char(20) DEFAULT '',
    last_name        char(20) NOT NULL,
        date_employ     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    email            varchar(50) NOT NULL UNIQUE,
    user_role        char(12) CHECK (user_role in ('admin','author','contributor')),
    biography         MEDIUMTEXT,
    avatar_link        varchar(100) DEFAULT 'default_avatar.png',
    
    CONSTRAINT Users_pk PRIMARY KEY (ID)
);

CREATE TABLE Page_type (
        type_name        char(20) NOT NULL UNIQUE,
    template_link    varchar(100) DEFAULT 'main.html',
    
    CONSTRAINT Page_type_pk PRIMARY KEY (type_name)
);

CREATE TABLE Theme (
        theme_ID       SMALLINT NOT NULL AUTO_INCREMENT,
    theme_name   varchar(20) NOT NULL UNIQUE,
    color_primary   varchar(20) DEFAULT '#f7f9f8',
    color_secondary    varchar(20) DEFAULT '#fe0037',
    text_color        varchar(20) DEFAULT '#eeeeee',
    theme_format   varchar(12) DEFAULT '900px' CHECK(theme_format in ('600px','900px','1200px')),
    font            varchar(12) DEFAULT 'Arial',
    
    CONSTRAINT theme_pk PRIMARY KEY (theme_ID)
);

CREATE TABLE Post (
        article_ID        SMALLINT NOT NULL AUTO_INCREMENT,
        title            varchar(50) NOT NULL,
    subtitle        char(100),
        post_date         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    theme       varchar(20) DEFAULT 'Bright-medium',
    page_type        char(20) DEFAULT 'blog',
    post_order        SMALLINT DEFAULT 0,
    content         LONGTEXT,
    cover_img_link    varchar(100),
    
CONSTRAINT Post_pk PRIMARY KEY (article_ID),
        CONSTRAINT Post_page_fk FOREIGN KEY (page_type) REFERENCES Page_type (type_name),
    CONSTRAINT Post_theme_fk FOREIGN KEY (theme) REFERENCES Theme (theme_name)
);

CREATE TABLE Topics (
        topic_name       varchar(20) NOT NULL UNIQUE,
    topic_status        varchar(12) DEFAULT 'public' CHECK(topic_status in ('public','premium','subscription')),
    topic_description    LONGTEXT,
    
    CONSTRAINT Categories_pk PRIMARY KEY (topic_name)
);

CREATE TABLE Tags (
        tag_name   varchar(20) NOT NULL,
    article_ID    SMALLINT NOT NULL,
    
    CONSTRAINT Tags_pk PRIMARY KEY (tag_name, article_ID),
    CONSTRAINT Tags_fk FOREIGN KEY (article_ID) REFERENCES Post (article_ID)
);

CREATE TABLE Subscriber (
        email        varchar(50) NOT NULL,
    sub_status        varchar(12) DEFAULT 'active' CHECK(sub_status in ('active','inactive')),
    
    CONSTRAINT Subscriber_pk PRIMARY KEY (email)
);

CREATE TABLE Stats (
        article_ID         SMALLINT NOT Null,
    IP_address     varchar(50),
    visit            DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT Stats_pk PRIMARY KEY (article_ID,IP_address,visit),
    CONSTRAINT Stats_fk FOREIGN KEY (article_ID) REFERENCES Post (article_ID)
);



--- Creating the Relationship tables ---


CREATE TABLE Writes (
        author_ID       SMALLINT NOT NULL,
    article_ID        SMALLINT NOT NULL,
    updated       DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    CONSTRAINT Writes_pk PRIMARY KEY (author_ID, article_ID),
    CONSTRAINT Writes_auth_fk FOREIGN KEY (author_ID) REFERENCES Users (ID),
    CONSTRAINT Writes_art_fk FOREIGN KEY (article_ID) REFERENCES Post (article_ID)
);

CREATE TABLE Topic_Post (
        topic_name        varchar(20) DEFAULT 'Uncategorized',
    article_ID        SMALLINT NOT NULL,
    
    CONSTRAINT Topic_Post_pk PRIMARY KEY (topic_name, article_ID),
    CONSTRAINT Topic_Post_topic_fk FOREIGN KEY (topic_name) REFERENCES Topics (topic_name),
    CONSTRAINT Topic_Post_art_fk FOREIGN KEY (article_ID) REFERENCES Post (article_ID)
);

CREATE TABLE Contributes (
        contributor        SMALLINT NOT NULL,
    article_ID        SMALLINT NOT NULL,
    
    CONSTRAINT Contrubutes_pk PRIMARY KEY (contributor, article_ID),
    CONSTRAINT Contributes_cont_fk FOREIGN KEY (contributor) REFERENCES Users (ID),
    CONSTRAINT Contributes_art_fk FOREIGN KEY (article_ID) REFERENCES Post (article_ID)
);

CREATE TABLE Subscribes (
        sub_email         varchar(50) NOT NULL,
    topic_name       varchar(20) NOT NULL,
    membership      varchar(12) DEFAULT 'Subscriber' CHECK(membership in ('Premium','Subscriber')),
    sub_date        DATETIME DEFAULT CURRENT_TIMESTAMP,
    renewed_date   DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    CONSTRAINT Subscribes_pk PRIMARY KEY (sub_email, topic_name),
    CONSTRAINT Subscribes_email_fk FOREIGN KEY (sub_email) REFERENCES Subscriber (email),
    CONSTRAINT Subscribes_topic_fk FOREIGN KEY (topic_name) REFERENCES Topics (topic_name)
);

CREATE TABLE Revenue (
        sub_email         varchar(50) NOT NULL,
    trans_date        DATETIME DEFAULT CURRENT_TIMESTAMP,
    trans_amount   SMALLINT DEFAULT 10,
    
    CONSTRAINT Revenue_pk PRIMARY KEY (sub_email, trans_date),
    CONSTRAINT Revenue_email_fk FOREIGN KEY (sub_email) REFERENCES Subscriber (email)
);
</pre>

<p>Below are the creation statements for views and functions copied from `ViewsFuncProc.sql` in .zip submission</p>
<pre>
--- CREATING A VIEW ---

CREATE VIEW author_stats AS
SELECT post,revenue, post_count.author, post_count.avatar_link
FROM
    (SELECT COUNT(Writes.article_ID) AS post, CONCAT(first_name,' ',last_name) as author, Users.avatar_link
    FROM Writes INNER JOIN Users ON Writes.author_id=Users.ID
    GROUP BY author ) as post_count
INNER JOIN
    (SELECT SUM(trans_amount) AS revenue, author
    FROM     (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
            FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
            GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email
    GROUP BY author) as author_revenue
ON post_count.author=author_revenue.author;


--- Create Functions ---

-- This function returns the subscription eligibility based on current subscription status OR one year anniversaries of subscription date
-- For use in the def grab_role query

DELIMITER $$

CREATE FUNCTION SubscriptionLevel(membership varchar(12), sub_date datetime)
RETURNS varchar(12)
DETERMINISTIC
BEGIN
    DECLARE new_membership varchar(12);
    
    IF membership='Premium'
        THEN SET new_membership = membership;
    ELSEIF (YEAR(sub_date) < YEAR(NOW()) AND MONTH(sub_date)=MONTH(NOW()) )
        THEN SET new_membership='Premium';
    ELSE SET new_membership=membership;
    END IF;
    
    RETURN (new_membership);

END$$
DELIMITER ;
</pre>
        </content>
    </post> 

<post>
        <title>SQL DML</title>
        <subtitle>Populating preliminary fields</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>7</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Here are the INSERT statements that got me started before I could auto populate other fields. There will be a failure when inserting rows which use timestamp as primary key. The statements are often executed so swiftly it throws a primary key duplicate error. The solution is either to comment out the offending statement, or run one statement at a time. </p>

<p>Copied from `INSERT.sql` in the .zip submission </p>

<pre>
--------- Insert Default Data ---------

--- Inserts for users ---

INSERT INTO Users (first_name, last_name, email, user_role, biography, avatar_link)
VALUES ('Lucas', 'Moyer', 'admin@moyeraudio.com','admin', 'Luke is the primary author of this project.', 'man.png');

INSERT INTO Users (first_name, last_name, email, user_role, biography, avatar_link)
VALUES ('Joe','Jerryfield','joejfield@website.com','author', 'Joe writes news articles', 'man.png');

INSERT INTO Users (first_name, last_name, email, user_role, biography, avatar_link)
VALUES ('Liz','Longerfield','lizlfield@website.com','author',"Liz writes children's articles", 'woman.png');

INSERT INTO Users (first_name, last_name, email, user_role, biography, avatar_link)
VALUES ('Ashley','Atfield','ashleyafield@website.com','author',"Ashley writes science articles", 'woman.png');

INSERT INTO Users (first_name, last_name, email, user_role, biography, avatar_link)
VALUES ('Abi','Andres','abiandres@website.com','contributor',"Abi edits news articles", 'woman.png');

INSERT INTO Users (first_name, last_name, email, user_role, biography, avatar_link)
VALUES ('John','Jackson','johnjackson@website.com','contributor',"John edits science and children's articles", 'man.png');




--- Inserts for Page_type ---

INSERT INTO Page_type (type_name, template_link)
VALUES ('main','main.html');

INSERT INTO Page_type (type_name, template_link)
VALUES ('blog','blog.html');

INSERT INTO Page_type (type_name, template_link)
VALUES ('about','about.html');

INSERT INTO Page_type (type_name, template_link)
VALUES ('dashboard','dash.html');





--- Inserts for Theme ---

INSERT INTO Theme (theme_name, color_primary, color_secondary, theme_format, text_color)
VALUES ('Bright-wide', '#f7f9f8', '#fe0037', '1200px', '#5b5b5b');

INSERT INTO Theme (theme_name, color_primary, color_secondary, theme_format, text_color)
VALUES ('Bright-medium', '#f7f9f8', '#fe0037', '900px', '#5b5b5b');

INSERT INTO Theme (theme_name, color_primary, color_secondary, theme_format, text_color)
VALUES ('Bright-narrow', '#f7f9f8', '#fe0037', '600px', '#5b5b5b');

INSERT INTO Theme (theme_name, color_primary, color_secondary, theme_format, font)
VALUES ('Dark-wide', '#323538', '#fe9815', '1200px', 'Times');

INSERT INTO Theme (theme_name, color_primary, color_secondary, theme_format, font)
VALUES ('Dark-medium', '#323538', '#fe9815', '900px', 'Times');

INSERT INTO Theme (theme_name, color_primary, color_secondary, theme_format, font)
VALUES ('Dark-narrow', '#323538', '#fe9815', '600px', 'Times');




--- Inserts for Post ---

INSERT INTO Post (title, page_type, content)
VALUES ('Home','main','<h1>Website Builder by Luke Moyer</h1><p>This Project creates a MySQL website database and serves it through Flask.</p><p>Follow the <a href="">Project</a> Category to read about the creation process.</p>');

INSERT INTO Post (title,subtitle, content)
VALUES ('Welcome','','<p>This Category will describe the creation process of this website builder</p>');

INSERT INTO Post (title,subtitle, content)
VALUES ('Public Lorem Ipsum','A static public category','<p>All posts are public</p>');

INSERT INTO Post (title,subtitle, content)
VALUES ('Subscribed Lorem Ipsum','A static subscription category','<p>All posts are viewable for subscribers</p>');

INSERT INTO Post (title,subtitle, content)
VALUES ('Premium Lorem Ipsum','A static premium category','<p>All posts are viewable for premium members</p>');

INSERT INTO Post (title,subtitle, content, post_order)
VALUES ('Project Goals','Defining our purpose','<p>This is the second article in the Project topic</p>',1);

INSERT INTO Post (title,subtitle, content, post_order)
VALUES ('Data Handling','What is our project data?','<p>This is the third article in the Project topic</p>',2);



--- Inserts for Topics ---

INSERT INTO Topics (topic_name, topic_status, topic_description)
VALUES ('Project','public','This topic regards the building and format of this website. This is a Capstone project in partial fulfillment of Eastern University\'s Data Science Master\'s program. This implementation is a MYSQL Database driven website. Follow the posts in this Topic to follow thie building stages and logic behind each step.');

INSERT INTO Topics (topic_name, topic_status,topic_description)
VALUES ('Public Blog','public','This topic represents all the blog posts that should be visible to the public. One does not have to subscribe in order to read these posts');

INSERT INTO Topics (topic_name, topic_status,topic_description)
VALUES ('Subscribed Blog','subscription','This topic represents all the blog posts that should be visible to basic subscribers. It would not be visible to the public without subscribeing. Anyone would be able to subscribe to this category free of charge');

INSERT INTO Topics (topic_name, topic_status,topic_description)
VALUES ('Premium Blog','premium','This topic represents all the blog posts that would only be visible to paid members (or promotional upgrades).');

INSERT INTO Topics (topic_name, topic_status,topic_description)
VALUES ('Uncategorized','public','This topic is a default backup for all posts which are otherwise unlabled.');




--- Inserts for Tags ---

INSERT INTO Tags (tag_name, article_ID)
VALUES ('webdesign',2);

INSERT INTO Tags (tag_name, article_ID)
VALUES ('database',2);

INSERT INTO Tags (tag_name, article_ID)
VALUES ('flask',2);

INSERT INTO Tags (tag_name, article_ID)
VALUES ('public',3);

INSERT INTO Tags (tag_name, article_ID)
VALUES ('subscription',4);

INSERT INTO Tags (tag_name, article_ID)
VALUES ('premium',5);



--- Inserts for Subscriber ---

INSERT INTO Subscriber (email, sub_status)
VALUES ('basicSubscriber@subs.org', 'active');

INSERT INTO Subscriber (email, sub_status)
VALUES ('basicSubscriber2@subs.org', 'active');

INSERT INTO Subscriber (email, sub_status)
VALUES ('premiumSubscriber@subs.org', 'active');

INSERT INTO Subscriber (email, sub_status)
VALUES ('premiumSubscriber2@subs.org', 'active');



--- Inserts for Stats ---

INSERT INTO Stats (article_ID, IP_address)
VALUES (1,'123.123.123.123');

INSERT INTO Stats (article_ID, IP_address)
VALUES (1,'123.123.123.123');

INSERT INTO Stats (article_ID, IP_address)
VALUES (1,'456.456.456.456');

INSERT INTO Stats (article_ID, IP_address)
VALUES (2,'123.123.123.123');

INSERT INTO Stats (article_ID, IP_address)
VALUES (2,'456.456.456.456');

INSERT INTO Stats (article_ID, IP_address)
VALUES (3,'456.456.456.456');

INSERT INTO Stats (article_ID, IP_address)
VALUES (3,'789.789.789.789');



--- Inserts for Writes ---

INSERT INTO Writes (author_ID, article_ID)
VALUES (1,1);

INSERT INTO Writes (author_ID, article_ID)
VALUES (1,2);

INSERT INTO Writes (author_ID, article_ID)
VALUES (2,3);

INSERT INTO Writes (author_ID, article_ID)
VALUES (3,4);

INSERT INTO Writes (author_ID, article_ID)
VALUES (4,5);

INSERT INTO Writes (author_ID, article_ID)
VALUES (1,6);

INSERT INTO Writes (author_ID, article_ID)
VALUES (1,7);



--- Inserts for Topic_Post ---

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Project', 2);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Public Blog', 3);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Subscribed Blog', 4);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Premium Blog', 5);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Project', 6);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Project', 7);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Uncategorized', 1);

INSERT INTO Topic_Post (topic_name, article_ID)
VALUES ('Public Blog', 1);



--- Inserts for Contributes ---

INSERT INTO Contributes (contributor, article_ID)
VALUES (5, 3);

INSERT INTO Contributes (contributor, article_ID)
VALUES (6, 4);

INSERT INTO Contributes (contributor, article_ID)
VALUES (6, 5);



--- Inserts for Subscribes ---

INSERT INTO Subscribes (sub_email, topic_name)
VALUES ("basicSubscriber@subs.org", "Project");

INSERT INTO Subscribes (sub_email, topic_name)
VALUES ("basicSubscriber2@subs.org", "Public Blog");

INSERT INTO Subscribes (sub_email, topic_name, membership)
VALUES ("basicSubscriber2@subs.org", "Subscribed Blog", 'Subscriber');

INSERT INTO Subscribes (sub_email, topic_name, membership)
VALUES ("premiumSubscriber@subs.org", "Premium Blog", "Premium");

INSERT INTO Subscribes (sub_email, topic_name, membership)
VALUES ("premiumSubscriber2@subs.org", "Project", "Premium");

INSERT INTO Subscribes (sub_email, topic_name, membership)
VALUES ("premiumSubscriber2@subs.org", "Public Blog", "Premium");

INSERT INTO Subscribes (sub_email, topic_name, membership)
VALUES ("premiumSubscriber2@subs.org", "Premium Blog", "Premium");

INSERT INTO Subscribes (sub_email, topic_name, membership)
VALUES ("premiumSubscriber2@subs.org", "Subscribed Blog", "Premium");


--- Inserts for Revenue ---

INSERT INTO Revenue (sub_email)
VALUES ('basicSubscriber@subs.org');

INSERT INTO Revenue (sub_email)
VALUES ('basicSubscriber2@subs.org');

INSERT INTO Revenue (sub_email, trans_amount)
VALUES ('premiumSubscriber@subs.org',20);

INSERT INTO Revenue (sub_email, trans_amount)
VALUES ('premiumSubscriber2@subs.org',20);

INSERT INTO Revenue (sub_email, trans_amount)
VALUES ('premiumSubscriber2@subs.org',20);
</pre>
        </content>
    </post> 
<post>
        <title>Sample Queries</title>
        <subtitle>What kinds of searches can we make?</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>8</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>For this project, I create _lots_ of sample queries. Most of them are unused, but can be referred to when I wish to expand capacity. I start a query by building it in my sql environment (workbench, see below). Once it functions the way I need it to, I rebuild it into my python project (also below). I have two files with queries: one for building the webpages, and the other for populating the dashboard. </p>

<p>Pagebuilding queries:</p>
<p>Copied from `Sample Queries.sql` in .zip submission</p>

<pre>
--- Equivalent Queries made from python def ---


--- def grab_article ---
SELECT Post.article_ID, Post.title, concat(Users.first_name,' ',Users.last_name) AS author, Post.subtitle, Post.post_date, Post.theme, Post.page_type, Post.post_order, Post.content, Post.cover_img_link
FROM Post INNER JOIN Writes ON Post.article_ID=Writes.article_ID INNER JOIN Users ON Users.ID=Writes.author_ID
WHERE title="Welcome";

--- def grab_all_topics ---
SELECT topic_name, topic_status
FROM Topics;

--- def grab_articles_in_topic_newst_first ---
SELECT Post.title
FROM Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID INNER JOIN Topics ON Topic_Post.topic_name=Topics.topic_name
WHERE Topics.topic_name="Project"
ORDER BY Post.post_order DESC, Post.post_date DESC;

--- def grab_articles_for_topic_oldest_first ---
SELECT Post.title
FROM Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID INNER JOIN Topics ON Topic_Post.topic_name=Topics.topic_name
WHERE Topics.topic_name="Project"
ORDER BY Post.post_order ASC, Post.post_date ASC;

--- def grab_articles_in_tag---
SELECT Post.title, Topic_Post.topic_name
FROM Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID
WHERE Tags.tag_name="public";

--- def grab_all_tags ---
SELECT tag_name, COUNT(*) as count
FROM Tags
GROUP BY tag_name
ORDER BY count DESC;

--- def grab_topics_in_article ---
SELECT Topics.topic_name
FROM Topics INNER JOIN Topic_Post ON Topics.topic_name=Topic_Post.topic_name INNER JOIN Post ON Topic_Post.article_ID=Post.article_ID
WHERE Post.article_ID=1;

--- def grab_authors ---
SELECT DISTINCT concat(Users.first_name, ' ', Users.last_name) AS author, ID
FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID;

--- def grab_contributors ---
SELECT DISTINCT concat(Users.first_name, ' ', Users.last_name) AS contributor, ID
FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor;

--- def grab_author_articles ---
SELECT Post.title, Topic_Post.topic_name
FROM (Post INNER JOIN Writes ON Post.article_ID=Writes.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID) INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID
WHERE Users.ID=1
ORDER BY topic_name;


--- def grab_contributor_articles ---
SELECT Post.title
FROM Post INNER JOIN Contributes ON Post.article_ID=Contributes.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID
WHERE Users.ID=5;

--- def grab_about_author ---
SELECT *, DATE_FORMAT(date_employ, '%M %Y') as date, TIMESTAMPDIFF(DAY,date_employ,NOW()) as days_employed
FROM Users
WHERE first_name="Lucas" AND last_name="Moyer";

--- def grab_kin_article ---
SELECT Post.title, Topic_Post.topic_name as topic
FROM Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
WHERE  Topic_Post.topic_name = "Project" AND Post.post_order = ((SELECT post_order FROM Post WHERE title = "Project Goals" LIMIT 1) + 1) ;









SELECT post_order FROM Post WHERE title = "Public Lorem Ipsum 3" LIMIT 1;

--- def grab_subscribed_topics ---
SELECT Topics.topic_name
FROM Topics INNER JOIN Subscribes ON Topics.topic_name=Subscribes.topic_name INNER JOIN Subscriber ON Subscribes.sub_email=Subscriber.email
WHERE Subscriber.email = "basicSubscriber2@subs.org";

--- def grab_public_topics ---
SELECT topic_name
FROM Topics
WHERE topic_status="public";



-- Use function to determine premium status


--- def grab_role ---
SELECT role
FROM (SELECT email, user_role AS role
    FROM Users
        UNION
    SELECT sub_email, SubscriptionLevel(membership, sub_date) AS role
    FROM Subscribes) AS all_users
WHERE email="basicSubscriber@subs.org";





--- def grab_article_feed ---
SELECT Topics.topic_name, Topics.topic_status, Subscribes.membership, Post.article_ID, Post.title, Post.post_date
FROM     (Topics INNER JOIN Subscribes ON Topics.topic_name=Subscribes.topic_name INNER JOIN Subscriber ON Subscribes.sub_email=Subscriber.email)
    INNER JOIN
        (Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID)
    ON Topics.topic_name=Topic_Post.topic_name
WHERE Subscriber.email = "premiumSubscriber2@subs.org" AND Subscriber.sub_status="active"
ORDER BY Post.post_date DESC;


--- def grab_theme ---
SELECT *
FROM Theme
WHERE theme_name="Dark-wide";

--- method exists ---

SELECT EXISTS(
    SELECT membership
    FROM Subscribes
    WHERE sub_email='basicSubscriber@subs.org' AND topic_name='Premium Blog'
);


-- for search bar --

--- def grab_like ---
SELECT * FROM Post
WHERE content LIKE '%Purpose%';

SELECT DISTINCT title, topic_name, SUBSTRING(content, 1, 200) AS preview
FROM Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
WHERE content LIKE '%Premium%';


Dashboard Queries
Copied from `dashboard.sql` in .zip submission


--- def kpi_av_day_views_in_month ---

SELECT ROUND( AVG(c.views) ,2) as av
FROM (SELECT COUNT(IP_address) as views
    FROM Stats
    WHERE YEAR(visit) ='2020' and MONTH(visit)='4'
    GROUP BY MONTH(visit), DAY(visit)) as c;


 --- def kpi_revenue_goal_month ---
 
 SELECT (SUM(trans_amount)/4500 * 100) as percent_goal
 FROM Revenue
 WHERE YEAR(trans_date)='2022' and MONTH(trans_date)='4';


--------- Count of views per site,article,topic,tag,author,contributor ---------

--- def stat_site_views ---
SELECT COUNT(IP_address) as all_views
FROM Stats;

--- def stat_site_unique_viewers ---
SELECT COUNT(DISTINCT IP_address) as unique_viewers
FROM Stats;

--- def stat_article_views ---
SELECT COUNT(IP_address) as all_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID
WHERE Post.title = 'Home';

--- def stat_article_unique_viewers ---
SELECT COUNT(DISTINCT IP_address) as unique_viewers
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID
WHERE Post.title = 'Home';

--- def stat_views_site_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day
FROM Stats
GROUP BY year, month, day, hour, SECOND(visit);

--- def stat_unique_views_site_time ---
SELECT COUNT(DISTINCT IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats
GROUP BY year, month, day, hour, SECOND(visit);

--- def stat_views_article_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID
WHERE Post.title = 'Home'
GROUP BY year, month, day, hour, SECOND(visit);

--- def stat_unique_views_article_time ---
SELECT COUNT(DISTINCT IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID
WHERE Post.title = 'Home'
GROUP BY year, month, day, hour, SECOND(visit);

--- def stat_all_topic_views ---
SELECT COUNT(IP_address) as all_views, Topic_Post.topic_name
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
GROUP BY Topic_Post.topic_name;



--- def stat_all_topic_views_time ---
SELECT COUNT(IP_address) as count_, Topic_Post.topic_name as cat_, YEAR(visit) as year, MONTH(visit) as month
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
GROUP BY cat_, year, month;




--- def stat_topic_views ---
SELECT COUNT(IP_address) as all_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
WHERE Topic_Post.topic_name = 'Public Blog';

SELECT COUNT(DISTINCT IP_address) as unique_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
WHERE Topic_Post.topic_name = 'Public Blog';

--- def stat_topic_views_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID
WHERE Topic_Post.topic_name = 'Public Blog'
GROUP BY year, month, day, hour, SECOND(visit);

--- def stat_all_tag_views ---
SELECT COUNT(IP_address) as all_views, Tags.tag_name
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID
GROUP BY Tags.tag_name;


--- def stat_all_tag_subs_time---
SELECT COUNT(DISTINCT sub_email) as count_, Tags.tag_name as cat_, YEAR(sub_date) as year, MONTH(sub_date) as month
FROM (Subscribes INNER JOIN Topic_Post ON Subscribes.topic_name=Topic_Post.topic_name) INNER JOIN Tags ON Topic_Post.article_ID=Tags.article_ID
GROUP BY cat_, year, month;




--- def stat_tag_views ---
SELECT COUNT(IP_address) as all_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID
WHERE Tags.tag_name = 'demo';

--- def stat_tag_views_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID
WHERE Tags.tag_name = 'demo'
GROUP BY year, month, day, hour;

--- def stat_author_views ---
SELECT COUNT(IP_address) as all_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer";

SELECT COUNT(DISTINCT IP_address) as all_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer";

--- def stat_author_views_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer"
GROUP BY year, month, day, hour, SECOND(visit);


--- def stat_author_topic_views ---
SELECT COUNT(IP_address) as all_views, Topic_Post.topic_name
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer"
GROUP BY topic_name;

--- def stat_author_topic_views_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer" AND Topic_Post.topic_name='Project'
GROUP BY year, month, day, hour;

--- def stat_all_author_posts ---
SELECT COUNT(article_ID) AS post, CONCAT(first_name,' ',last_name) as author
FROM Writes INNER JOIN Users ON Writes.author_id=Users.ID
GROUP BY author;







--- def stat_all_author_posts_revenue ---
-- EXAMPLE --

--- What are the total posts per author and what is that authors revenue contribution?
--- Authors contribution defined as: the sum of reveue associated with subscribers who subscribe to topics to which the author also contributes


SELECT post,revenue, post_count.author, post_count.avatar_link
FROM
(SELECT COUNT(article_ID) AS post, CONCAT(first_name,' ',last_name) as author, Users.avatar_link
FROM Writes INNER JOIN Users ON Writes.author_id=Users.ID
GROUP BY author ) as post_count
INNER JOIN
(SELECT SUM(trans_amount) AS revenue, author
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email
GROUP BY author) as author_revenue
ON post_count.author=author_revenue.author;

--- Equivalent to below view ---

SELECT * FROM author_stats;



--- def stat_contributor_views ---
SELECT COUNT(IP_address) as all_views
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer";

--- def stat_contributor_views_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer"
GROUP BY year, month, day, hour, SECOND(visit);

--- def stat_contributor_topic_views ---
SELECT COUNT(IP_address) as all_views, Topic_Post.topic_name
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer"
GROUP BY topic_name;

--- def stat_contributor_topic_views_time ---
SELECT COUNT(IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour
FROM Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID
WHERE Users.first_name = 'Lucas' AND Users.last_name = "Moyer" AND Topic_Post.topic_name='Project'
GROUP BY year, month, day, hour;






--------- Count of subscriptions per site,article,topic,author,contributor ---------



--- def stat_site_subs ---
SELECT COUNT(sub_email) AS count_subs
FROM Subscribes;

--- def stat_site_subs_time ---
SELECT COUNT(sub_email) AS count_subs, sub_date, YEAR(sub_date) as year, MONTH(sub_date) as month, DAY(sub_date) AS day
FROM Subscribes
GROUP BY year, month;

--- def stat_all_topic_subs ---
SELECT COUNT(Subscribes.sub_email) AS count_subs, Subscribes.topic_name
FROM Subscribes INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name
GROUP BY Subscribes.topic_name;


--- def stat_all_topic_subs_time ---
SELECT COUNT(Subscribes.sub_email) AS count_subs, Subscribes.topic_name, YEAR(sub_date) as year, MONTH(sub_date) as month
FROM Subscribes INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name
WHERE YEAR(sub_date) = 2020 and MONTH(sub_date) = 4
GROUP BY Subscribes.topic_name, year, month;


--- def stat_topic_subs
SELECT COUNT(sub_email) AS count_subs
FROM Subscribes
WHERE topic_name='Premium Blog';

--- def stat_membership_subs ---
SELECT COUNT(sub_email) AS count_subs, membership
FROM Subscribes
GROUP BY membership;

--- def stat_all_author_subs ---
SELECT COUNT(author) AS count_subs, author
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name
GROUP BY author;


--- def stat_all_author_subs_time ---
SELECT COUNT(author) AS viewers, author, YEAR(sub_date) as year, MONTH(sub_date) as month, DAY(sub_date) as day
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name
GROUP BY author;





--- def stat_author_subs ---
SELECT COUNT(author) AS count_subs, author
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name
WHERE author='Lucas Moyer';



--- def stat_author_subs_time ---
SELECT COUNT(sub_email) AS viewers, author, YEAR(sub_date) as year, MONTH(sub_date) as month, DAY(sub_date) as day
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name
WHERE author='Lucas Moyer'
GROUP BY year, month, day;




--- def stat_all_contributor_subs ---
SELECT COUNT(author) AS count_subs, author
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor INNER JOIN Topic_Post ON Contributes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name
GROUP BY author;

--- def stat_contributor_subs ---
SELECT COUNT(author) AS count_subs, author
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor INNER JOIN Topic_Post ON Contributes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name
WHERE author = 'Lucas Moyer';







--------- SUM of revenue per site,article,topic,author,contributor ---------




--- def stat_site_revenue ---
SELECT SUM(trans_amount)
FROM Revenue;

--- def stat_all_topics_revenue ---
SELECT SUM(trans_amount), Topics.topic_name
FROM Revenue INNER JOIN Subscribes ON Revenue.sub_email=Subscribes.sub_email INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name
GROUP BY Topics.topic_name;

--- def stat_topic_revenue ---
SELECT SUM(trans_amount), Topics.topic_name
FROM Revenue INNER JOIN Subscribes ON Revenue.sub_email=Subscribes.sub_email INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name
WHERE Topics.topic_name='Project';

--- def stat_author_revenue ---
SELECT SUM(trans_amount) AS revenue, author
FROM (SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author
        FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID
        GROUP BY author, topic_name) AS U
    INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email
GROUP BY author;
</pre>

        </content>
    </post> 

<post>
        <title>Application Code</title>
        <subtitle>Delivering the database</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>9</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Review</p>
<p>So far this is what we have done:</p>
<ul><li>Created expectations for our project
<li>Created expectations for the Database
<li>Created ER Diagram and ER Model for our intentions
<li>Created DDL and DML statements to get the Database up and running
<li>Created Queries to fall back on in order to create the website population and dashboard
<p>Up next we need to:</p>
<ul><li>Choose tools to use to create more data</li>
<li>Write code to build more data</li>
<li>Write server code to provide the data to a web browser</li>
<li>Review and provide systematic instructions for duplicating project</li>
<li>Implementation Tools</li></ul>
<p>For this project, here are the tools I am using:</p>
<ul><li>Computer: Mac mini (Late 2014)</li>
<li>Processor: 2.6GHz Dual-Core Intel Core i5</li>
<li>Memory: 8 GB 1600 MHz DDR3</li>
<li>Graphics: Intel Iris 1536 MB</li>
<li>Version: 11.2.2 macOS Big Sur</li></ul>
<p>Software:</p>
<ul><li>MySQL Workbench 8.0.28 (64bit) Community by ORACLE </li>
<li>Visual Studio Code 1.65.0</li>
<li>Terminal 2.11 (440)</li>
<li>Firefox Browser 99.0.1 (64bit)</li>
<li>A2Hosting Drive Web Hosting (for MySQL Database)</li></ul>
<p>Code:</p>
<ul><li>Python 3.9.4</li>
<li>Flask 2.0.3</li>
<li>Jinja2 3.0.2</li>
<li>Mysql-connector 2.2.9</li>
<li>Numpy 1.21.3</li>
<p>Javascript</p>
<li>Chartjs.org (char.js)</li></ul>
        </content>
    </post> 
<post>
        <title>Building SQL Statments</title>
        <subtitle>Communicate with the Database through Python</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>10</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>The following is copied from `customSQL.py` and will be the basis for all sql calls. It begins by building a connector class with relevant select/insert methods. This class will be called, and passed into the query functions we want to use. Many of those query functions are pasted below. Not every one is used, but many are and serve as a basis to build on in further development.</p>
<p>After this paste is the function statements for the dashboard queries</p>
<p>(Thank you to google docs for retaining color schemes, making it far easier to read. This is not a picture, it's just formatted text as PASTE into google docs) </p>
<br>
<pre><code>
MYSQL_share_credentials = {
   "user":'moyeraud_capstoneViewer',
   "password":'(EcL$)nH{u5~,',
   "host":"moyeraudio.com",
   "database":"moyeraud_website-builder"
}


from tokenize import group
import mysql.connector
from auth import MYSQL_credentials as cred
 
 
class custom_SQL:
   def __init__(self):
       try:
           self.con = mysql.connector.connect(**cred)
       except mysql.connector.Error as err:
           return(err)
  
   def select(self,Q,table,conditions=False,orderby=False,groupby=False):
       cur = self.con.cursor(buffered=True)
       statement = f'SELECT {Q} FROM {table}'
       if conditions:
           features = []
           matches = []
           for key in conditions:
               features.append(key)
               matches.append(conditions[key])
 
           statement += ' WHERE {}=%s'.format(features[0])
           if len(conditions.keys())>1:
               for feat in features[1:]:
                   statement += ' AND {}=%s'.format(feat)
          
 
           if orderby:
               statement+=" ORDER BY "+orderby
           if groupby:
               statement+=" GROUP BY "+groupby
           print(statement)
           cur.execute(statement,(*matches,))
       else:
           if orderby:
               statement+=" ORDER BY "+orderby
           if groupby:
               statement+=" GROUP BY "+groupby
           # cur.execute(statement,(Q,table))
           print(statement)
           cur.execute(statement)
 
       column_names = [c[0] for c in cur.description]
       data_dict = dict()
       for name in column_names:
           data_dict[name] = []
       results = [cur.fetchall()]
       for row in results[0]:
           for i, col in enumerate(row):
               data_dict[column_names[i]].append(col)
       cur.close()
 
       return data_dict
 
   def insert(self,table,col_val_dict,close=True):
       cur = self.con.cursor(buffered=True)
       columns=tuple([key for key in col_val_dict.keys()])
       col_string=','.join(columns)
       values=tuple([col_val_dict[c] for c in columns])
       statement = 'INSERT INTO {} ({}) VALUES {}'.format(table,col_string,values)
       print(statement)
      
       # cur.execute(statement,(values,))
       cur.execute(statement)
       last_id = cur.lastrowid
       if close:
           cur.close()
           # self.commit()
       return last_id
 
   def update(self,table,column,value,row_id, close=True):
       cur = self.con.cursor(buffered=False)
       statement = "UPDATE {} SET {} = '{}' WHERE article_ID={}".format(table,column,value,row_id)
       # print(statement)
       # cur.execute(statement,(values,))
       # cur.execute(statement, multi=True)
       cur.execute(statement)
       last_id = cur.lastrowid
      
       if close:
          
           cur.close()
           # self.commit()
       return last_id
 
   def exists(self,what,table,conditions):
       cur = self.con.cursor(buffered=True)
       statement = f'SELECT EXISTS( SELECT {what} FROM {table}'
       cond_keys = []
       cond_values = []
       for cond in conditions.keys():
           cond_keys.append(cond)
           cond_values.append(conditions[cond])
       statement += " WHERE {}=%s".format(cond_keys[0])
       if len(cond_keys)>1:
           for cond in cond_keys[1:]:
               statement += " AND {}=%s ".format(cond)
       statement += ")"
       vals = (*cond_values,)
 
       cur.execute(statement,vals)
       answer = cur.fetchone()
       cur.close()
       return answer
 
   def like(self,what,table,item,term):
       cur = self.con.cursor(buffered=True)
 
       statement = f"SELECT {what} FROM {table} WHERE {item} LIKE CONCAT('%', %s, '%') limit 10"
  
       cur.execute(statement,(term,))
       answer = cur.fetchall()
       cur.close()
       return answer
 
   def custom(self,statement,values):
       print(statement, values)
       cur = self.con.cursor(buffered=True)
       if len(values) > 0:
           cur.execute(statement,(*values,))
       else:
           cur.execute(statement)
       answer = cur.fetchall()
       print(answer)
       cur.close()
       return answer
 
   def commit(self):
       self.con.commit()
 
   def close(self):
       self.con.close()
 
 
 
########### SELECT ############
 
def grab_article(sql_obj, title, post_id=False):
   find="Post.article_ID, Post.title, concat(Users.first_name,' ',Users.last_name) AS author, Post.subtitle, Post.post_date, Post.theme, Post.page_type, Post.post_order, Post.content, Post.cover_img_link"
   table="Post INNER JOIN Writes ON Post.article_ID=Writes.article_ID INNER JOIN Users ON Users.ID=Writes.author_ID"
   conditions={"Post.title":title}
   if post_id:
       conditions["Post.article_ID":post_id]
   return sql_obj.select(find,table,conditions)
 
def grab_all_topics(sql_obj):
   find="topic_name, topic_status"
   table="Topics"
   return sql_obj.select(find,table)
 
def grab_all_tags(sql_obj):
   find="tag_name, COUNT(*) as count"
   table="Tags GROUP BY tag_name ORDER BY count DESC"
   return sql_obj.select(find,table)
 
def grab_articles_in_topic(sql_obj,topic_name,order="DESC"):
   find="Post.title, Topics.topic_description, Topics.topic_status"
   table="Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID INNER JOIN Topics ON Topic_Post.topic_name=Topics.topic_name"
   conditions={"Topics.topic_name":topic_name}
   orderby=f"Post.post_order {order}, Post.post_date {order}"
   return sql_obj.select(find,table,conditions,orderby)
 
def grab_articles_in_tag(sql_obj,tag_name):
   find="Post.title, Topic_Post.topic_name"
   table=" Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID"
   conditions={"Tags.tag_name":tag_name}
   return sql_obj.select(find,table,conditions)
 
def grab_topics_in_article(sql_obj,article_ID):
   find="Topics.topic_name, Topics.topic_status"
   table="Topics INNER JOIN Topic_Post ON Topics.topic_name=Topic_Post.topic_name INNER JOIN Post ON Topic_Post.article_ID=Post.article_ID"
   conditions={"Post.article_ID":article_ID}
   return sql_obj.select(find,table,conditions)
 
def grab_tags_in_article(sql_obj,article_ID):
   find="tag_name"
   table="Tags"
   conditions={"article_ID":article_ID}
   return sql_obj.select(find,table,conditions)
 
def grab_authors(sql_obj):
   find="DISTINCT concat(Users.first_name,' ',Users.last_name) AS author, Users.avatar_link"
   table="Users INNER JOIN Writes ON Users.ID=Writes.author_ID"
   return sql_obj.select(find,table)
 
def grab_about_author(sql_obj,first_name,last_name):
   find="*,  DATE_FORMAT(date_employ, '%M %Y') as date, TIMESTAMPDIFF(DAY,date_employ,NOW()) as days_employed"
   table="Users"
   conditions={'first_name':first_name,'last_name':last_name}
   return sql_obj.select(find,table,conditions)
 
def grab_author_id(sql_obj,email):
   find="ID"
   table="Users"
   conditions={
       "email":email
   }
   return sql_obj.select(find,table,conditions)
 
def grab_contributors(sql_obj):
   find="DISTINCT concat(Users.first_name,' ',Users.last_name) AS contributor, Users.avatar_link"
   table="Users INNER JOIN Contributes ON Users.ID=Contributes.contributor"
   return sql_obj.select(find,table)
 
def grab_author_articles(sql_obj,author_ID):
   find="Post.title, Topic_Post.topic_name"
   table="(Post INNER JOIN Writes ON Post.article_ID=Writes.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID) INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID"
   conditions={"Users.ID":author_ID}
   orderby="topic_name"
   return sql_obj.select(find,table,conditions,orderby)
 
def grab_contributor_articles(sql_obj,contributor_ID):
   find="Post.title, Topic_Post.topic_name"
   table="(Post INNER JOIN Contributes ON Post.article_ID=Contributes.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID) INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID"
   conditions={"Users.ID":contributor_ID}
   orderby="topic_name"
   return sql_obj.select(find,table,conditions,orderby)
 
 
##### Known bug in this statement. I spent a long time trying to get it to replicate the successful query in the `.sql` file with no success
def grab_kin_article(sql_obj,title,topic,kin):
   find="Post.title,Topics.topic_name"
   table="Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID INNER JOIN Topics ON Topic_Post.topic_name=Topics.topic_name"
   conditions={
       "Topics.topic_name":topic,
       "Post.post_order":f'((SELECT post_order FROM Post WHERE title = "{title}" LIMIT 1) + 1)'
       }
   return sql_obj.select(find,table,conditions)
 
 
def grab_subscribed_topics(sql_obj,user_email):
   find="Topics.topic_name"
   table="Topics INNER JOIN Subscribes ON Topics.topic_name=Subscribes.topic_name INNER JOIN Subscriber ON Subscribes.sub_email=Subscriber.email"
   conditions={"Subscriber.email":user_email}
   return sql_obj.select(find,table,conditions)
 
def grab_public_topics(sql_obj):
   find="topic_name"
   table="Topics"
   conditions={"topic_status":"public"}
   return sql_obj.select(find,table,conditions)
 
def grab_role(sql_obj,email):
   find="role"
   table="(SELECT email, user_role AS role FROM Users UNION SELECT sub_email, membership AS role FROM Subscribes) AS all_users"
   conditions={"email":email}
   return sql_obj.select(find,table,conditions)
 
def grab_article_feed(sql_obj,email):
   find="Topics.topic_name, Topics.topic_status, Subscribes.membership, Post.article_ID, Post.title, Post.post_date"
   table="(Topics INNER JOIN Subscribes ON Topics.topic_name=Subscribes.topic_name INNER JOIN Subscriber ON Subscribes.sub_email=Subscriber.email) INNER JOIN (Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID) ON Topics.topic_name=Topic_Post.topic_name"
   conditions={"Subscriber.email":email,"Subscriber.sub_status":"active"}
   orderby="Post.post_date DESC LIMIT 10"
   return sql_obj.select(find,table,conditions,orderby)
 
def grab_theme(sql_obj,theme):
   find="*"
   table="Theme"
   conditions={"theme_name":theme}
   return sql_obj.select(find,table,conditions)
 
def grab_like(sql_obj,searchtext):
   find="title, topic_name, SUBSTRING(content, 1, 200) AS preview"
   table="Post INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID"
   term="content"
   return  sql_obj.like(find,table,term,searchtext)
 
 
############# INSERTS ##############
 
def put_article(sql_obj,title,subtitle,theme,content,post_order):
   table = 'Post'
   col_value= {
       'title':title,
       'subtitle':subtitle,
       'content':content,
       'post_order':post_order,
       'theme':theme
   }
   return sql_obj.insert(table,col_value)
 
def put_topic(sql_obj,name,status,description):
   table = 'Topics'
   col_value= {
       'topic_name':name,
       'topic_status':status,
       'topic_description':description
   }
   return sql_obj.insert(table,col_value)
  
def put_tag(sql_obj,name,article_ID):
   table = 'Tags'
   col_value= {
       'tag_name':name,
       'article_ID':article_ID,
   }
   return sql_obj.insert(table,col_value)
 
def put_stat(sql_obj,article_ID,IP_address,datetime):
   table = 'Stats'
   col_value= {
       'IP_address':IP_address,
       'article_ID':article_ID,
       'visit':datetime
   }
   return sql_obj.insert(table,col_value)
 
def put_writes(sql_obj,article_ID,author_ID):
   table = 'Writes'
   col_value= {
       'author_ID':author_ID,
       'article_ID':article_ID,
   }
   return sql_obj.insert(table,col_value)
 
def put_topic_post(sql_obj,topic_name,article_ID):
   table = 'Topic_Post'
   col_value= {
       'topic_name':topic_name,
       'article_ID':article_ID,
   }
   return sql_obj.insert(table,col_value)
 
def put_contributes(sql_obj,article_ID,contributor_ID):
   table = 'Contributes'
   col_value= {
       'contributor':contributor_ID,
       'article_ID':article_ID,
   }
   return sql_obj.insert(table,col_value)
 
def put_revenue(sql_obj,email,amount,date):
   table = 'Revenue'
   col_value= {
       'sub_email':email,
       'trans_amount':amount,
       'trans_date':date
   }
   return sql_obj.insert(table,col_value)
 
def put_subscriber(sql_obj,email):
   table = 'Subscriber'
   col_value= {
       'email':email,
       'sub_status':'active',
   }
   return sql_obj.insert(table,col_value)
 
def put_subscribes(sql_obj,email,topic_name,membership,sub_date):
   table = 'Subscribes'
   col_value= {
       'sub_email':email,
       'topic_name':topic_name,
       'membership':membership,
       'sub_date':sub_date
   }
   return sql_obj.insert(table,col_value)
 
 
 
def alter_article(sql_obj,title,content):
   table = 'Post'
   column='content'
   return sql_obj.update(table,column,content,title)

</code></pre>
<br>
<p>From `dashboard.py` , which serves the functions used to query for the dashboard</p>
<br>
<pre><code>
from datetime import datetime
 
import customSQL
from customSQL import custom_SQL
 
def kpi_site_view_av_day_month(sql_obj,year,month):
   SELECT1 = "SELECT ROUND( AVG(c.views) ) AS av "
   FROM1 = "FROM "
   SELECT2 = "(SELECT COUNT(IP_address) AS views FROM Stats"
   WHERE1 = " WHERE YEAR(visit)=%s"
   COND = " AND"
   WHERE2 = " MONTH(visit)=%s"
   GROUP = " GROUP BY MONTH(visit), DAY(visit)) as c"
 
   statement = SELECT1+FROM1+SELECT2
   vals = tuple()
   if year and month:
       statement+=WHERE1 + COND + WHERE2
       vals = (year,month)
   elif year:
       statement+=WHERE1
       vals = (year,)
   elif month:
       statement+=WHERE2
       vals = (month,)
   statement+=GROUP
   return sql_obj.custom(statement, vals)
 
def kpi_site_month_goals(sql_obj,year,month):
   SELECT1 = "SELECT ROUND( (SUM(trans_amount)/4500 * 100),1 ) as percent_goal "
   FROM1 = "FROM Revenue"
   WHERE1 = " WHERE YEAR(trans_date)=%s"
   COND = " AND"
   WHERE2 = " MONTH(trans_date)=%s"
 
   statement = SELECT1 + FROM1
   vals = tuple()
   if year and month:
       statement+=WHERE1+COND+WHERE2
       vals = (year,month)
   elif year:
       statement+=WHERE1
       vals = (year,)
   elif month:
       statement+=WHERE2
       vals = (month,)
   return sql_obj.custom(statement, vals)
 
 
def stat_all_topic_subs_time(sql_obj,year=False,month=False):
   find='COUNT(Subscribes.sub_email) AS count_, Subscribes.topic_name as cat_, YEAR(sub_date) as year, MONTH(sub_date) as month'
   table="Subscribes INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name"
   conditions={}
   group="cat_"
   if year:
       conditions["YEAR(sub_date)"] = year
       group+=", year"
   if month:
       conditions["MONTH(sub_date)"] = month
       group+=", month"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_all_topic_views_time(sql_obj,year=False,month=False,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS count_, Topic_Post.topic_name as cat_, YEAR(visit) as year, MONTH(visit) as month"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID"
   conditions = {}
   group='cat_'
   if year:
       conditions["YEAR(visit)"] = year
       group+=", year"
   if month:
       conditions["MONTH(visit)"] = month
       group+=", month"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
 
def stat_views_tag_time(sql_obj,year=False,month=False,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS count_, Tags.tag_name AS cat_, visit, YEAR(visit) as year ,MONTH(visit) as month"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID"
   conditions={}
   group="cat_"
   if year:
       conditions["YEAR(visit)"] = year
       group+=", year"
   if month:
       conditions["MONTH(visit)"] = month
       group+=", month"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
 
 
def stat_subs_tag_time(sql_obj,year=False,month=False,unique=True):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} sub_email) AS count_, Tags.tag_name AS cat_, sub_date, YEAR(sub_date) as year ,MONTH(sub_date) as month"
   table="(Subscribes INNER JOIN Topic_Post ON Subscribes.topic_name=Topic_Post.topic_name) INNER JOIN Tags ON Topic_Post.article_ID=Tags.article_ID"
   conditions={}
   group="cat_"
   if year:
       conditions["YEAR(sub_date)"] = year
       group+=", year"
   if month:
       conditions["MONTH(sub_date)"] = month
       group+=", month"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
 
def stat_author_views_time(sql_obj,author_name,year=False,month=False,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1]}
   group="year, month"
   if year:
       conditions["YEAR(visit)"]=year
   if month:
       conditions['MONTH(visit)']=month
       group+=', day'
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
 
def stat_author_subs_time(sql_obj,author_name,year=False,month=False,unique=False):
   find='COUNT(sub_email) AS viewers, author, YEAR(sub_date) as year, MONTH(sub_date) as month, DAY(sub_date) as day'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name"
   conditions={"author":author_name}
   group="year, month"
   if year:
       conditions["YEAR(sub_date)"]=year
   if month:
       conditions['MONTH(sub_date)']=month
       group+=', day'
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
 
 
def stat_site_views(sql_obj, unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats"
   return sql_obj.select(find,table)
 
def stat_article_views(sql_obj,post_title,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID"
   conditions={'Post.title':post_title}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_views_site_time(sql_obj,year=False,month=False,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day"
   table="Stats"
   conditions={}
   group="year"
   if year:
       conditions['YEAR(visit)']=year
       group+=', month'
   if month:
       conditions['MONTH(visit)']=month
       group+=", day"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_views_article_time(sql_obj,post_title,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID"
   conditions={'Post.title':post_title}
   group="year, month, day, hour"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_all_topic_views(sql_obj,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID"
   group='Topic_Post.topic_name'
   return sql_obj.select(find,table,groupby=group)
 
 
def stat_topic_views(sql_obj,topic_name,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID"
   conditions={'Topic_Post.topic_name':topic_name}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_views_topic_time(sql_obj,topic_name,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Topic_Post ON Post.article_ID=Topic_Post.article_ID"
   conditions={'Topic_Post.topic_name':topic_name}
   group="year, month, day, hour"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_all_tag_views(sql_obj,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, Tags.tag_name"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID"
   group='Tags.tag_name'
   return sql_obj.select(find,table,groupby=group)
 
def stat_tag_views(sql_obj,tag_name,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Tags ON Post.article_ID=Tags.article_ID"
   conditions={'Tags.tag_name':tag_name}
   return sql_obj.select(find,table,conditions=conditions)
 
 
 
def stat_author_views(sql_obj,author_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1]}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_all_author_posts(sql_obj):
   find="COUNT(article_ID) AS post, CONCAT(first_name,' ',last_name) as author "
   table="Writes INNER JOIN Users ON Writes.author_ID=Users.ID"
   group="author"
   return sql_obj.select(find,table,groupby=group)
 
def stat_author_stats(sql_obj):
   find="*"
   table="author_stats"
   return sql_obj.select(find,table)
 
def stat_contributor_views(sql_obj,author_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1]}
   return sql_obj.select(find,table,conditions=conditions)
 
 
def stat_contributor_views_time(sql_obj,author_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1]}
   group="year, month, day, hour"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_author_topic_views(sql_obj,author_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, Topic_Post.topic_name"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1]}
   group="topic_name"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_contributor_topic_views(sql_obj,author_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, Topic_Post.topic_name"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1]}
   group="topic_name"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_author_topic_views_time(sql_obj,author_name,topic_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Writes ON Writes.article_ID=Post.article_ID INNER JOIN Users ON Writes.author_ID=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1],'Topic_Post.topic_name':topic_name}
   group="year, month, day, hour"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_contributor_topic_views_time(sql_obj,author_name,topic_name,unique=False):
   author = author_name.split(' ')
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} IP_address) AS viewers, visit, YEAR(visit) as year ,MONTH(visit) as month, DAY(visit) as day, HOUR(visit) as hour"
   table="Stats INNER JOIN Post on Stats.article_ID=Post.article_ID INNER JOIN Contributes ON Contributes.article_ID=Post.article_ID INNER JOIN Users ON Contributes.contributor=Users.ID INNER JOIN Topic_Post on Post.article_ID=Topic_Post.article_ID"
   conditions={'Users.first_name':author[0],'Users.last_name':author[1],'Topic_Post.topic_name':topic_name}
   group="year, month, day, hour"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
def stat_site_subs(sql_obj):
   find='COUNT(sub_email) AS count_subs'
   table="Subscribes"
   return sql_obj.select(find,table)
 
def stat_subs_site_time(sql_obj,year=False,month=False,unique=False):
   unique = 'DISTINCT' if unique else ''
   find=f"COUNT({unique} sub_email) AS viewers, sub_date, YEAR(sub_date) as year ,MONTH(sub_date) as month, DAY(sub_date) as day"
   table="Subscribes"
   conditions={}
   group="year"
   if year:
       conditions['YEAR(sub_date)']=year
       group+=', month'
   if month:
       conditions['MONTH(sub_date)']=month
       group+=", day"
   return sql_obj.select(find,table,conditions=conditions,groupby=group)
 
 
def stat_all_topic_subs(sql_obj):
   find='COUNT(Subscribes.sub_email) AS count_subs, Subscribes.topic_name'
   table="Subscribes INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name"
   group="Subscribes.topic_name"
   return sql_obj.select(find,table,groupby=group)
 
 
 
def stat_topic_subs(sql_obj,topic_name):
   find='COUNT(Subscribes.sub_email) AS count_subs'
   table="Subscribes"
   conditions={"topic_name":topic_name}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_membership_subs(sql_obj):
   find='COUNT(sub_email) AS count_subs, membership'
   table="Subscribes"
   group="membership"
   return sql_obj.select(find,table,groupby=group)
 
def stat_all_author_subs(sql_obj):
   find='COUNT(author) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name"
   group="author"
   return sql_obj.select(find,table,groupby=group)
 
def stat_author_subs(sql_obj, author_name):
   find='COUNT(author) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name"
   conditions={"author":author_name}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_all_contributor_subs(sql_obj):
   find='COUNT(author) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor INNER JOIN Topic_Post ON Contributes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name"
   group="author"
   return sql_obj.select(find,table,groupby=group)
 
def stat_all_contributor_subs(sql_obj,contrib_name):
   find='COUNT(author) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor INNER JOIN Topic_Post ON Contributes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name"
   conditions={"author":contrib_name}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_site_revenue(sql_obj):
   find='SUM(trans_amount) AS revenue'
   table='Revenue'
   return sql_obj.select(find,table)
 
def stat_all_topics_revenue(sql_obj):
   find='SUM(trans_amount) AS revenue, Topics.topic_name'
   table="Revenue INNER JOIN Subscribes ON Revenue.sub_email=Subscribes.sub_email INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name"
   group="Topics.topic_name"
   return sql_obj.select(find,table,groupby=group)
 
def stat_topic_revenue(sql_obj,topic_name):
   find='SUM(trans_amount) AS revenue, Topics.topic_name'
   table="Revenue INNER JOIN Subscribes ON Revenue.sub_email=Subscribes.sub_email INNER JOIN Topics ON Subscribes.topic_name=Topics.topic_name"
   conditions={"Topics.topic_name":topic_name}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_all_author_revenue(sql_obj):
   find='SUM(trans_amount) AS revenue, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email"
   group="author"
   return sql_obj.select(find,table,groupby=group)
 
def stat_author_revenue(sql_obj, author_name):
   find='SUM(trans_amount) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Writes ON Users.ID=Writes.author_ID INNER JOIN Topic_Post ON Writes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email"
   conditions={"author":author_name}
   return sql_obj.select(find,table,conditions=conditions)
 
def stat_all_contributor_revenue(sql_obj):
   find='SUM(trans_amount) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor INNER JOIN Topic_Post ON Contributes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email"
   group="author"
   return sql_obj.select(find,table,groupby=group)
 
def stat_contributor_revenue(sql_obj,contrib_name):
   find='SUM(trans_amount) AS count_subs, author'
   table="(SELECT topic_name, CONCAT(Users.first_name,' ',Users.last_name) as author FROM Users INNER JOIN Contributes ON Users.ID=Contributes.contributor INNER JOIN Topic_Post ON Contributes.article_ID=Topic_Post.article_ID GROUP BY author, topic_name) AS U INNER JOIN Subscribes ON U.topic_name=Subscribes.topic_name INNER JOIN Revenue ON Subscribes.sub_email=Revenue.sub_email"
   conditions={"author":contrib_name}
   return sql_obj.select(find,table,conditions=conditions)
 
 
if __name__=="__main__":
   Q = custom_SQL()
 
   s2 = stat_site_views(Q)
 
   Q.close()
   print(s2)

</code></pre>
<br>
<p>Onces again, not all of these functions are used, but they will be easily adaptable for production.</p>
        </content>
    </post> 
<post>
        <title>Serivg Files with Flask</title>
        <subtitle>The serverside structure</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>11</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Now that we have sql connector functions, we can start calling them with Flask to render pages. The following is copied from my main app file called `webapp.py`</p>
<br>
<pre><code>
from flask import Flask, render_template, redirect, url_for, request, make_response, session, jsonify
from datetime import datetime
 
import customSQL
from customSQL import custom_SQL
 
from dashapp import dashapp
 
 
app = Flask(__name__, static_url_path='/static')
app.register_blueprint(dashapp)
 
#default dummy key
#normally this should be in a hidden file
#this security is not required for our purposes
app.secret_key = b'_5#y2L"F4Q8z\n\xec]/'
 
 
 
@app.before_request
def check_user():
   if 'email' in session:
       email = session['email']
       print(email)
   if 'role' in session:
       role = session['role']
       print(role)
  
@app.route('/')
@app.route('/<page>')
def index(page='home'):
  
   Q = custom_SQL()
   page = customSQL.grab_article(Q,page)
   theme = customSQL.grab_theme(Q,page['theme'][0])
 
 
   Q.close()
   post = {
       'title': page['title'][0],
       'content': page['content'][0],
       'username': session['email']
   }
 
   user = True if session['role'] in ['admin','author','contributor'] else False
 
   template=page['page_type'][0]+'.html'
 
   return render_template(
       template,
       post=post,
       user=user,
       role=session['role'],
       theme=theme
       )
 
@app.route('/topic/')
@app.route('/Topic')
@app.route('/topic/<thisTopic>')
@app.route("/topic/<thisTopic>/<title>")
def sortTopic(thisTopic=None,title=None):
   if thisTopic and title:
       return prepTopic(thisTopic,title)
   elif thisTopic:
       return aboutTop(thisTopic)
   else:
       return redirect('/topics/')
 
def aboutTop(thisTopic):
   Q = custom_SQL()
   topic_list = customSQL.grab_articles_in_topic(Q,thisTopic,order="ASC")
 
   Q.close()
   return render_template('topic.html',
       topic= {
           "post_title":topic_list['title'],
           "topic_name":thisTopic,
           "topic_status":topic_list['topic_status'][0],
           "topic_description":topic_list['topic_description'][0]
       },
       role=session['role'],
       subscribed=is_subscribed(thisTopic)
       )
 
def prepTopic(thisTopic="Project",title="Project Goals"):
 
   Q = custom_SQL()
   article = customSQL.grab_article(Q,title)
   tops = customSQL.grab_topics_in_article(Q,article['article_ID'][0])
   previous = customSQL.grab_kin_article(Q,article['title'][0],thisTopic,-1)
   after = customSQL.grab_kin_article(Q,article['title'][0],thisTopic,1)
   toplist = customSQL.grab_articles_in_topic(Q,thisTopic,order="ASC")
   tags = customSQL.grab_tags_in_article(Q,article['article_ID'][0])
   theme = customSQL.grab_theme(Q,article['theme'][0])
 
   Q.close()
 
   if not is_subscribed(thisTopic):
       return redirect(f'/topic/{thisTopic}')
 
   i=0
   post = {
       'title':article['title'][i],
       'author':article['author'][i],
       'date':article['post_date'][i],
       'subtitle':article['subtitle'][i],
       'topics':tops['topic_name'],
       'tags':tags['tag_name'],
       'content': article['content'][i],
       'previous':previous['title'][0],
       'next':after['title'][0]
       }
   topic_ = {
       'name':thisTopic,
       'list':toplist['title'],
   }
 
   return render_template('post.html',
       post=post,
       topic=topic_,
       role=session['role'],
       theme=theme
       )
 
 
@app.route("/Topics/")
@app.route("/topics/")
def topics():
   Q = custom_SQL()
   topic_list= customSQL.grab_all_topics(Q)
   Q.close()
 
   return render_template('topics.html',
       topic_list=topic_list,
       role=session['role'],
       )
 
 
@app.route('/feed/')
def feed():
   Q = custom_SQL()
   role = session['role']
   email = session['email']
 
   if (role == 'Public'):
       availableTopics = []
       potential_feed = customSQL.grab_public_topics(Q)
       feed = customSQL.grab_article_feed(Q,"basicSubscriber@subs.org")
   else:  
       availableTopics = customSQL.grab_subscribed_topics(Q,email)
       feed = customSQL.grab_article_feed(Q,email)
       potential_feed = customSQL.grab_all_topics(Q)
   Q.close()
 
   print(potential_feed)
   return render_template('feed.html',
       availableTopics=availableTopics,
       email=email,
       role=session['role'],
       Feed=feed,
       potential_feed=potential_feed
 
       )
 
@app.route('/tags/')
@app.route('/tag/')
@app.route('/Tags/')
def aboutTag():
   Q = custom_SQL()
   tag_list= customSQL.grab_all_tags(Q)
   Q.close()
 
   return render_template('tags.html',
       tag_list=tag_list,
       )
 
 
@app.route('/tag/<tagname>')
def prepTag(tagname='public'):
   Q = custom_SQL()
   article_list= customSQL.grab_articles_in_tag(Q, tagname)
   Q.close()
 
   return render_template('tag_page.html',
       tag=tagname,
       article_list=article_list,
       role=session['role'],
       )
 
@app.route('/about/')
@app.route('/authors/')
@app.route('/author/')
def allAuthors():
   Q = custom_SQL()
   authors= customSQL.grab_authors(Q)
   contributors=customSQL.grab_contributors(Q)
   Q.close()
 
   return render_template('about.html',
       authors=authors,
       contributors=contributors,
       role=session['role'],
       )
 
@app.route('/author/<author>')
def aboutAuthor(author=None):
   Q = custom_SQL()
   if " " in author:
       author = author.split(' ')
   elif "-" in author:
       author = author.split('-')
   profile= customSQL.grab_about_author(Q,author[0],author[1])
   articles = customSQL.grab_author_articles(Q, profile['ID'][0])
   contribs = customSQL.grab_contributor_articles(Q, profile['ID'][0])
   Q.close()
 
 
   def sort_topic(query):
       by_topic = {}
       for (topic, title) in zip(query['topic_name'],query['title']):
           if topic not in by_topic.keys():
               by_topic[topic] = []
           by_topic[topic].append(title)
       return by_topic
 
   auth_by_topic = sort_topic(articles)
   contrib_by_topic = sort_topic(contribs)
 
   return render_template('author.html',
       author={
           "name":profile['first_name'][0]+' '+profile['last_name'][0],
           "role":profile['user_role'][0],
           "date":profile['date'][0],
           "days_employed":profile['days_employed'][0],
           "email":profile['email'][0],
           "biography":profile['biography'][0],
           "avatar_link":profile['avatar_link'][0]
       },
       articles=auth_by_topic if len(articles) else False,
       contribs=contrib_by_topic if len(contribs) else False,
       role=session['role'],
       )
 
 
 
@app.route('/viewas/', methods=['POST'])
def viewas():
   viewer=request.form['logged-in']
   Q = custom_SQL()
   role = customSQL.grab_role(Q,viewer)
   Q.close()
   print(role)
   if role['role'] == []:
       session['role'] = "Public"
   else:
       session['role'] = role['role'][0]
   session['email'] = viewer
  
   if session['role'] in ['admin']:
       return redirect('/dashboard/')
   elif session['role'] == "Public":
       return redirect('/home')
   else:
       return redirect('/feed/')
 
 
@app.route('/search/',methods=["POST","GET"])
def search():
   if request.method == "POST":
 
       searchText = request.json
       Q = custom_SQL()
       foundList = customSQL.grab_like(Q,searchText['search'])
       print(foundList)
 
       if foundList ==[]:
           Q.close()
           return jsonify({'response':False})
       Q.close()
          
       return jsonify({'answer':foundList,'response':True})
   else:
       return render_template('search.html')
 
 
def is_subscribed(topic):
   if session['role'] in ['admin','author','contributor']:
       return True
   Q = custom_SQL()
   is_public = Q.exists('topic_status','Topics',{'topic_name':topic,'topic_status':'public'})
   is_subbed = Q.exists('membership','Subscribes',{'sub_email':session['email'],'topic_name':topic})
  
   answer = any([is_public[0], is_subbed[0]])
   Q.close()
   return answer
 
 

</code></pre>
        </content>
    </post> 

<post>
        <title>Templates</title>
        <subtitle>HTML endpoinds for API routes</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>12</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>We call Templates for serving pages. Here is the file archival structure for our project:</p>
<ul><li>-webapp.py</li>
<li>-dashboard.py</li>
<li>-customSQL.py</li>
<li>-dashapp.py</li>
<li>-generate_posts.py</li>
<li>-generate_revenue.py</li>
<li>-generate_stats.py</li>
<li>-(hidden auth.py)</li>
<li>-content
    <ul><li>-posts.xml</li></ul><li>
<li>-static
    <ul><li>-img<li>
    <li>-style.css<li>
    <li>-script.js<li>
    <li>-chart.js<li>
    <li>-dashAPI.js<li></ul><li>
<li>-templates
    <ul><li>-about.html
    <li>-author.html</li></ul></li>
<li>-base.html</li>
<li>-dashboard.html</li>
<li>-feed.html</li>
<li>-main.html</li>
<li>-post.html</li>
<li>-search.html</li>
<li>-sidebar.html</li>
<li>-tag_page.html</li>
<li>-tags.html</li>
<li>-topic.html</li>
<li>-topics.html</li></ul>
<br>
<p>Here is the content from these templates starting with base.html :</p>
<br>
<p>Base.html</p>
<pre><code>
<!DOCTYPE html>
<html lang='en'>
<head>
   <meta charset='utf-8'>
   <meta name='viewport' content='width=device-width, initial-scale=1'>
   <link rel="icon" type="image/png" href="{{ url_for('static', filename='img/favicon.png') }}"/>
   <title> {% block title %} {% endblock %}</title>
   {% block style %} {% endblock %}
 
   <link rel='stylesheet' href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
   <header>
       <a id="title" href="/"><div>
           <h1>Website Builder</h1>
           <h2>Database Capstone Project</h2>
       </div></a>
       <div id="head-nav-container">
           <div id="head-nav-upper">
               <form action="/viewas/" method="POST" id="view-select">
                   <label for="'logged-in">Change view as:</label>
                   <select name='logged-in' id="logged-in" onchange="this.form.submit()" >
                       <option value='Public'>Public</option>
                       <option value='basicSubscriber2@subs.org' {% if role=='Subscriber'  %} selected {% endif %}>Subscriber</option>
                       <option value='premiumSubscriber2@subs.org'{% if role=='Premium' %} selected {% endif %}>Premium</option>
                       <option value='joejfield@website.com'{% if role=='author' %} selected {% endif %}>Author</option>
                       <option value='abiandres@website.com'{% if role=='contributor' %} selected {% endif %}>Contributor</option>
                       <option value='admin@moyeraudio.com'{% if role=='admin' %} selected {% endif %}>Admin</option>
                   </select>
               </form>
           </div>
           <div id="head-nav-lower">
               <nav id="header-nav">
                   <ul>
                       <li><a href="/home">HOME</a></li>
                       <li><a href="/search">SEARCH</a></li>
                       <li><a href="/topics">TOPICS</a></li>
                       {% if role in ['admin','author','contributor'] %}
                       <li><a href="/dashboard">DASHBOARD</a></li>
                       {% endif %}
                       {% if role in ['Subscriber','Premium'] %}
                        <li><a href="/feed">FEED</a></li>
                        {% endif %}
                       <li><a href="/about">ABOUT</a></li>
                   </ul>
               </nav>
           </div>
       </div>
 
   </header>
   <aside id="sidebar">
      
       {% if sidebarvar == 'sidebar1' %} {% include 'sidebar.html' %} {% block sidebar1 %} {% endblock %} {% endif %}
       {% if sidebarvar == 'sidebar2' %} {% block sidebar2 %} {% endblock %} {% endif %}
       {% if sidebarvar == 'sidebar3' %} {% block sidebar3 %} {% endblock %} {% endif %}
       {% if sidebarvar == 'sidebar4' %} {% block sidebar4 %} {% endblock %} {% endif %}
   </aside>
   <main>
       {% block content %} {% endblock %}
   </main>
  
   <footer>
       <p>&copy; Lucas E Moyer</p>
       <p>Project in partial fulfillment of Eastern University Data Science Program</p>
   </footer>
   <script src="{{ url_for('static', filename='script.js') }}"></script>
 
</body>
</html>
</code></pre>
<br>
<p>About.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Authors and Contributors {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h2>Authors</h2>
</section>
<section id='middle'>
   <div class="about-wrapper">
   {% for i in range( authors['author']|length ) %}
   <figure class="user_avatar">
       <a href="/author/{{ authors['author'][i] }}">
           <img src="{{ url_for('static', filename = 'img/'+authors['avatar_link'][i]) }}" alt="avatar from pixabay.com">
           <figcaption>{{ authors['author'][i] }}  </figcaption>
       </a>
   </figure>
   {% endfor %}
   </div>
</section>
<section id='end'>
   <h2>Contributors</h2>
   <div class="about-wrapper">
   {% for i in range( contributors['contributor']|length ) %}
 
       <figure class="user_avatar">
           <a href="/author/{{ contributors['contributor'][i] }}">
           <img src="{{ url_for('static', filename = 'img/'+contributors['avatar_link'][i]) }}" alt="avatar from pixabay.com">
           <figcaption>{{ contributors['contributor'][i] }}</figcaption>
           </a>
       </figure>
  
   {% endfor %}
   </div>
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Author.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} {{ author['name'] }} {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <div id="profile-wrapper">
       <img src="{{ url_for('static', filename = 'img/'+author['avatar_link']) }}" alt="avatar from pixabay.com">
       <div id="profile-name-wrapper">
           <h2>{{ author['name'] }}</h2>
           <p>{{ author['role'] }} since {{ author['date'] }} ({{ author['days_employed'] }} days)</p>
           <p>Contact <a href="mailto:{{ author['email'] }}">directly</a></p>
       </div>
   </div>
</section>
<section id="middle">
   <h3>Bio</h3>
   <p>{{ author['biography'] }}</p>
</section>
<hr class="divider">
<section id='end'>
   {% if articles %}
   <h3>Contributions to this site as Author:</h3>
   {% for key in articles.keys() %}
       <h4>{{ key }}</h4>
       {% for post in articles[key] %}
           <a href="/topic/{{ key }}/{{ post }}">{{ post }} </a></br>
       {% endfor %}
   {% endfor %}
   {% endif %}
 
   {% if contribs %}
   <hr class="divider">
   <h3>Contributions to this site as Contributor:</h3>
   {% for key in contribs.keys() %}
       <h4>{{ key }}</h4>
       {% for post in contribs[key] %}
           <a href="/topic/{{ key }}/{{ post }}">{{ post }} </a></br>
       {% endfor %}
   {% endfor %}
   {% endif %}
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Dashboard.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Dashboard {% endblock %}
 
{% block style %}
<style>
   :root {
       --page-width: {{ '100%' }} ;
       --primary-color: {{ '#f7f9f8' }};
       --secondary-color: {{ '#fe0037' }};
       --text-color: {{ '#5b5b5b' }};
       --font: {{ 'Ariel' }};
   }
</style>
{% endblock %}
 
{% set sidebarvar = 'sidebar2' %}
{% block sidebar2 %}
   <p>Logged in as: {{ role }}</p>
   <label for="sort-year">Sort By Year</label>
   <select name='sort-year' id="sort-year" onchange="resort_dashboard()" >
       <option value=false selected>All</option>
       <option value=2020>2020</option>
       <option value=2021>2021</option>
   </select>
   <label for="sort-month">Sort By Month</label>
   <select name='sort-month' id="sort-month" onchange="resort_dashboard()" >
       <option value=false selected>All</option>
       <option value=1>January</option>
       <option value=2>Febuary</option>
       <option value=3>March</option>
       <option value=4>April</option>
       <option value=5>May</option>
       <option value=6>June</option>
       <option value=7>July</option>
       <option value=8>August</option>
       <option value=9>September</option>
       <option value=10>October</option>
       <option value=11>November</option>
       <option value=12>December</option>
   </select>
   <label for="sort-graph">Change Graphs</label>
   <select name='sort-graph' id="sort-graph" onchange="resort_dashboard()" >
       <option value="views" selected>Page Views</option>
       <option value='subs'>Subscriptions</option>
   </select>
   <label for="sort-graph-2">Change Bar Graph</label>
   <select name='sort-graph-2' id="sort-graph-2" onchange="resort_dashboard()" >
       <option value="topic" selected>Topics</option>
       <option value='tag'>Tags</option>
   </select>
   <label for="_type-all">IP_address</label>
   <select name='sort-graph-3' id="_type-all" onchange="resort_dashboard()" >
       <option value="false" selected>All</option>
       <option value='true'>Unique</option>
   </select>
  
{% endblock %}
 
{% block content %}
<section id="stats-options">
   <h1>Dashboard</h1>
   <div di="stats-meta">
       <div>
           <form id="stats-time">
 
           </form>
       </div>
   </div>
</section>
<section id="stats-upper">
   <div id="stats-upper-left">
       <div id="ul-params"></div>
       <div id="ul-chart-wrapper">
           <canvas id="ul-chart"></canvas>
       </div>
   </div>
   <div id="stats-upper-right">
       <div id="stats-kpi-1">
           <canvas id="kpi1" width="250" height="250"></canvas>
       </div>
       <div id="stats-kpi-2">
           <canvas id="kpi2" width="250" height="250"></canvas>
       </div>
   </div>
</section>
<section id='stats-lower'>
   <div id="stats-lower-left">
       <div id="ll-params"></div>
       <div id="ll-chart-wrapper">
           <canvas id="ll-chart"></canvas>
       </div>
   </div>
   <div id="stats-lower-right">
       <!-- <h3>Authors</h3> -->
       <div id="stats-author-wrapper">
           <div class="stats-author" id="stats-author-header">
               <p class="stat-author-item stat-author-item-1"></p>
               <p class="stat-author-item stat-author-item-2">Author</p>
               <p class="stat-author-item stat-author-item-3">Engagement</p>
               <p class="stat-author-item stat-author-item-4">Posts</p>
               <p class="stat-author-item stat-author-item-5">Revenue</p>
           </div>
       </div>
   </div>
</section>
 
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="{{ url_for('static', filename='dashAPI.js') }}"></script>
<script src="{{ url_for('static', filename='chart.js') }}"></script>
{% endblock %}

</code></pre>
<br>
<p>Feed.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} List Subcriptions {% endblock %}
 
{% set sidebarvar = 'sidebar2' %}
{% block sidebar2 %}
   <p>Logged in as: {{ role }}</p>
   <p>Newest articles</p>
   <ul id="feed-sidebar">
       {% for i in range( Feed['title']|length ) %}
       <li><a href="/topic/{{ Feed['topic_name'][i] }}/{{ Feed['title'][i] }}">{{ Feed['title'][i] }}</a></li>
       {% endfor %}
   </ul>
{% endblock %}
 
{% block content %}
<section id="top">
   <h2>Current Subscriptions</h2>
   {% for i in range( availableTopics['topic_name']|length ) %}
       <a href="/topic/{{ availableTopics['topic_name'][i] }}">{{ availableTopics['topic_name'][i] }}</a></br>
   {% endfor %}
</section>
<section id='end'>
   <h2>Available Subscriptions</h2>
   {% for i in range( potential_feed['topic_name']|length ) %}
       <a href="/topic/{{ potential_feed['topic_name'][i] }}">{{ potential_feed['topic_name'][i] }}</a></br>
   {% endfor %}
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Main.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} {{ post.title }} {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h1>{{ post.title }} </h1>
   {% if post.subtitle != None %}
       <h2>{{ post.subtitle }}</h2>
   {% endif %}
</section>
<section id="middle">
   <div>{{ post.content|safe }}</div>
   <div id="meta">
      
   </div>
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Post.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} {{ topic.name }} - {{ post.title }} {% endblock %}
 
{% block style %}
<style>
   :root {
       --page-width: {{ theme.theme_format[0] }} ;
       --primary-color: {{ theme.color_primary[0] }};
       --secondary-color: {{ theme.color_secondary[0] }};
       --text-color: {{ theme.text_color[0] }};
       --font: {{ theme.font[0] }};
   }
</style>
{% endblock %}
 
{% set sidebarvar = 'sidebar3' %}
{% block sidebar3 %}
   <p>Current Topic: {{ topic.name }}</p>
   <ul id="current_articles">
       {% for topost in topic.list %}
       <li><a href='{{ topost }}'>{{ topost }}</a></li>
       {% endfor %}
   </ul>
{% endblock %}
 
{% block content %}
<section id="top">
   <h1>{{ post.title }} </h1>
   <a href="/author/{{ post.author }}">{{ post.author }}</a>
   <p>{{ post.date }}</p>
</section>
<section id="middle">
   {% if post.subtitle != None %}
       <h2>{{ post.subtitle }}</h2>
   {% endif %}
   <div>{{ post.content|safe }}</div>
</section>
<section id='end'>
   <p>Topics: {% for p in post.topics %}<a href="/topic/{{ p }}">{{ p }}</a>,{% endfor %}</p>
   <p>Tags: {% for t in post.tags %}<a href="/tag/{{ t }}">{{ t }}</a>,{% endfor %}</p>
</section>
<section id='post-nav'>
   <a href="{{ post.previous }}">Previous: {{ post.previous }}</a>
   <a href="{{ post.next }}">Next: {{ post.next }}</a>
</section>
{% endblock %}
</code></pre>
<br>
<p>Search.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Search Site {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h1>Search</h1>
   <form id="searchbar">
       <input type="text" name="search" placeholder="Search The Site..">
   </form>
   <button id="searchsubmit" onclick=search()>Search</button>
  
</section>
<section id="middle">
   <div id="results">
       <div class="search-result">
           <h3 class="title"></h3>
           <p class="preview"></p>
       </div>
   </div>
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Sidebar.html</p>
<pre><code>
{% block sidebar1 %}
   <nav>
   <ul id="current_articles">
       {% if user %}
       <li><a href='/dashboard'>Dashboard (admin)</a></li>
       {% endif %}
       <li><a href='/'>Home</a></li>
       <li><a href='/search'>Search</a></li>
       <li><a href='/feed'>Feed</a></li>
       <li><a href='/topics'>Topics</a></li>
       <li><a href='/tags'>Tags</a></li>
       <li><a href='/about'>About</a></li>
   </ul>
   </nav>
{% endblock %}
 
 </code></pre>
<br>
<p>Tag_page.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Tag - {{ tag }} {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h2>{{ tag }}</h2>
</section>
<section id='end'>
   {% for i in range( article_list['title']|length ) %}
       <a href="/topic/{{ article_list['topic_name'][i] }}/{{ article_list['title'][i] }}">{{ article_list['title'][i] }}</a></br>
  
   {% endfor %}
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Tags.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Tags {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h2>All Tags</h2>
</section>
<section id='end'>
   {% for i in range( tag_list['tag_name']|length ) %}
       <a href="/tag/{{ tag_list['tag_name'][i] }}">{{ tag_list['tag_name'][i] }} <i>{{ tag_list['count'][i] }}</i></a></br>
  
   {% endfor %}
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Topic.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Topic - {{ topic.topic_name }} {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h2>{{ topic.topic_name }}</h2>
   <p>{{ topic.topic_description }}</p>
</section>
 
<section id='end'>
{% if subscribed %}
   {% for i in range( topic['post_title']|length ) %}
       <a href="/topic/{{ topic.topic_name }}/{{ topic['post_title'][i] }}">{{ topic['post_title'][i] }}</a></br>
   {% endfor %}
{% else %}
   <p>You are not subsribed to this topic. Please subscribe in order to read.</p>
{% endif %}
</section>
 
{% endblock %}
</code></pre>
<br>
<p>Topics.html</p>
<pre><code>
{% extends 'base.html' %}
 
{% block title %} Topics {% endblock %}
 
{% set sidebarvar = 'sidebar1' %}
 
{% block content %}
<section id="top">
   <h2>All Topics</h2>
</section>
<section id='end'>
   {% for i in range( topic_list['topic_name']|length ) %}
       <a href="/topic/{{ topic_list['topic_name'][i] }}">{{ topic_list['topic_name'][i] }} <i>{{ topic_list['topic_status'][i] }}</i></a></br>
   {% endfor %}
</section>
 
{% endblock %}

</code></pre>
        </content>
    </post> 

<post>
        <title>Generating Data</title>
        <subtitle>Making our own Data</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>13</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Review</p>
<p>So far since our last review we have:</p>
<ul><li>Chosen tools to build our application</li>
<li>Built a series of SQL queries into Python to be called when needed</li>
<li>Built a FLASK server file to handle routes and API calls</li>
<li>Built html templates to serve when called by the routes, and to populate with data</li></ul>
<p>Up next we will:</p>
<ul><li>Create Python files which we will run in terminal</li>
<li>These files will either insert data into our data base from pre-written content or</li>
<li>Generate randomized content</li></ul>
<br<
<p>Inserting XML data</p>
<p>Two files generate Post data. The first is an xml file which holds all the content and meta. This kind of data replicates what we would have in a POST request from an author publishing a post. The same insertion logic will occur. The second file is the parsing and insertion statements. </p>
<p>From `posts.xml` </p>
<p>***Note: This file now holds all the data in this current document, each section of this document representing a different post. This content cannot be inserted here, for recursive reasons</p>
<p>Instead, it has the Lorem Ipsum data generated from www.lipsum.org<p>
<pre><code>
<?xml version="1.0"?>
<p/ost_feed>
 
<p/ost>
       <title>Welcome to Public Lorem</title>
       <subtitle>First post in the public Lorem Ipsum blog</subtitle>
       <author>
           <first_name>Joe</first_name>
           <last_name>Jerryfield</last_name>
           <email>joejfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>Abi</first_name>
               <last_name>Andres</last_name>
               <email>abiandres@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-medium</theme>
       <topics>
           <topic_name>Public Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>public</tag_name>
       </tags>
       <post_order>0</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>This Blog is a public Topic. The content of these post are generated through <a href='https://www.lipsum.com'>lipsum.com</a>. The purpose of this blog is the show that a public topic on this site can be viewable by anyone without needed to be logged in or subscribed. See the <a href='/topics/'>topics</a> page to view additional topics (often called Categories). Use the "View As" dropdown above to change who you are viewing as.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Public Lorem Ipsum 1</title>
       <subtitle>446 words from Lipsum.com</subtitle>
       <author>
           <first_name>Joe</first_name>
           <last_name>Jerryfield</last_name>
           <email>joejfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>Abi</first_name>
               <last_name>Andres</last_name>
               <email>abiandres@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-medium</theme>
       <topics>
           <topic_name>Public Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>public</tag_name>
       </tags>
       <post_order>1</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eget commodo felis. Aliquam tellus tortor, dignissim in cursus a, posuere eget metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In a sagittis dolor. Nunc efficitur urna eget arcu porttitor dignissim. Ut efficitur ultricies enim in suscipit. Mauris ut suscipit augue. Vivamus consequat risus et lectus congue, sit amet accumsan mauris iaculis. Maecenas rutrum commodo vulputate. Phasellus molestie ut ligula in rutrum. Donec sed nibh velit. Donec dictum est sem, in imperdiet ante suscipit at.</p>
           <p>Donec non lorem ac ipsum aliquet suscipit lobortis at urna. Nunc egestas turpis lorem, in euismod magna gravida ut. In sed molestie nisi. Vivamus non pulvinar lacus. Sed maximus urna eu lorem mollis, vel mollis turpis egestas. Vivamus eleifend metus tellus, a aliquam eros volutpat ac. Duis vitae porttitor nulla, vitae ultrices sapien. Mauris eu lorem felis. Suspendisse ultricies, enim in aliquet interdum, risus orci efficitur sem, non iaculis nunc velit id elit.</p>
           <p>Integer ac ipsum dolor. Sed quis diam in neque rhoncus pulvinar. Cras vel mi efficitur, vestibulum odio euismod, euismod lorem. In odio ipsum, laoreet vitae porttitor ut, cursus bibendum neque. Vestibulum neque mauris, convallis in semper nec, faucibus ut odio. Praesent et nunc ut quam semper finibus at vel sapien. Maecenas iaculis mauris at ante mattis aliquet at et nisi. Donec ac ipsum at ligula facilisis molestie a nec augue. Etiam sit amet orci euismod, porta diam in, varius nisl. Phasellus varius, lectus eget molestie facilisis, justo ipsum molestie ligula, sed accumsan lorem mauris a sem. Curabitur tortor erat, molestie nec pharetra at, accumsan sed velit. Curabitur molestie elit orci, sed lacinia nibh dapibus eu. Sed sem mauris, malesuada eget dapibus non, mollis sit amet tortor. Proin hendrerit, velit euismod iaculis commodo, diam urna pretium lacus, vel mattis libero tellus sollicitudin metus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed vel libero vel est dictum venenatis laoreet non odio.</p>
           <p>Vivamus gravida turpis in nibh gravida, non imperdiet elit eleifend. Praesent egestas euismod lorem ut vulputate. Phasellus luctus feugiat ex eget commodo. Suspendisse mattis, ante nec dapibus fermentum, ligula quam porttitor eros, vitae mattis mauris tellus id enim. Nullam placerat metus eget porta pretium. Pellentesque in nibh at ipsum imperdiet placerat ac et massa. Nulla aliquet ante quis tempor tristique. Praesent turpis nisl, fermentum ut feugiat sed, porttitor in elit. Nullam quis dui vehicula, sagittis mi vel, sodales eros. Pellentesque dolor ante, maximus eu dolor nec, aliquam iaculis magna. Vivamus eget dignissim dui. Morbi elementum maximus eleifend. Aliquam fringilla aliquam elementum. Pellentesque vestibulum ligula fermentum risus ultrices vulputate. Integer purus urna, sagittis a facilisis quis, consectetur nec mi.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Public Lorem Ipsum 2</title>
       <subtitle>341 words from Lipsum.com</subtitle>
       <author>
           <first_name>Joe</first_name>
           <last_name>Jerryfield</last_name>
           <email>joejfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>Abi</first_name>
               <last_name>Andres</last_name>
               <email>abiandres@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-medium</theme>
       <topics>
           <topic_name>Public Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>public</tag_name>
       </tags>
       <post_order>2</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat, sem nec tincidunt sollicitudin, augue eros tempor diam, ac porta tortor quam varius dui. Sed eu nulla non ex laoreet fringilla vitae vitae velit. Donec lobortis odio a mi tempor, in congue nisl varius. Proin eu porttitor eros. Praesent hendrerit, ex id interdum ornare, massa lorem feugiat mauris, sed molestie nunc neque quis nulla. Nunc dictum nisi et odio pulvinar, non aliquam elit viverra. Fusce faucibus feugiat magna non molestie. Pellentesque ligula ex, vulputate non cursus sed, vestibulum id enim. Mauris sed posuere purus, in luctus leo.</p>
           <p>Aliquam enim risus, lacinia a maximus id, ullamcorper non felis. Sed ac nulla ut ipsum eleifend lobortis. Vivamus id pretium velit. Nunc cursus elit magna, non efficitur arcu auctor eu. Proin ac nunc sit amet metus eleifend cursus. Cras metus quam, gravida et turpis sit amet, feugiat efficitur dui. Aliquam eu porta tortor. Integer nisl lorem, convallis egestas rhoncus vitae, interdum id orci. Nam euismod lacinia libero, ac tincidunt erat consequat efficitur. Ut in ex a urna interdum maximus quis sed odio. Sed semper porta augue, vitae gravida lacus fermentum eu. Integer interdum lacus mauris. Vestibulum eu enim sit amet est mattis vehicula.</p>
           <p>Curabitur vestibulum sodales arcu nec vulputate. Integer rutrum est at nibh pellentesque, id bibendum tellus dictum. Vivamus in mollis arcu. Donec eget turpis aliquam, semper quam eget, ultricies tellus. Sed bibendum erat non justo pulvinar, vitae ultricies purus varius. Donec suscipit purus ipsum, et lacinia ex luctus a. Cras euismod quam eu orci consequat aliquam et at ex.</p>
           <p>Maecenas eget purus ut nisi semper volutpat nec non est. Aliquam eu metus sed odio accumsan congue eget volutpat nibh. Suspendisse potenti. Sed purus nulla, rutrum et metus at, congue egestas nisi. Mauris euismod non neque blandit ultrices. Donec euismod nunc est, vel pellentesque neque iaculis a. Proin pretium a neque id luctus. Vestibulum vitae est lacinia, malesuada augue sed, lobortis sapien. In pulvinar dui tincidunt velit maximus, sit amet semper libero egestas. Nulla molestie libero nec dolor facilisis, a elementum orci fermentum.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Public Lorem Ipsum 3</title>
       <subtitle>239 words from Lipsum.com</subtitle>
       <author>
           <first_name>Joe</first_name>
           <last_name>Jerryfield</last_name>
           <email>joejfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>Abi</first_name>
               <last_name>Andres</last_name>
               <email>abiandres@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-medium</theme>
       <topics>
           <topic_name>Public Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>public</tag_name>
       </tags>
       <post_order>3</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam leo nibh, auctor in hendrerit eu, iaculis quis odio. Praesent a mi eu est gravida venenatis. Nunc consectetur nibh vitae ante finibus blandit. Etiam mattis finibus efficitur. Nam semper, velit et auctor rutrum, lacus velit euismod lectus, vitae mattis sem ex ut massa. Aenean gravida dui ut orci accumsan, in tincidunt ex volutpat. Maecenas nec lobortis nibh, eu dictum velit. Morbi sit amet ultrices ex. Pellentesque volutpat sit amet dui at viverra.</p>
           <p>Mauris molestie pharetra nulla vitae laoreet. Vivamus ut ultrices purus, eget faucibus risus. Nunc tincidunt metus quis eleifend pellentesque. Vestibulum egestas velit purus, in posuere elit porttitor eu. Pellentesque ultrices tincidunt metus, a sagittis ipsum pretium ut. Vivamus sodales ligula molestie mauris auctor gravida. Quisque sollicitudin eros quis quam dignissim eleifend et ut orci. Aenean in vehicula justo. Phasellus viverra consequat turpis vel tempus. Sed vulputate sapien sit amet metus pharetra, iaculis tincidunt est commodo.</p>
           <p>Integer nec eleifend velit, a commodo ipsum. Aliquam venenatis urna ac nulla faucibus, non aliquet elit iaculis. Ut ut tortor vulputate, porttitor lacus ut, viverra ex. Vivamus ut suscipit massa. Curabitur a pellentesque enim, in bibendum odio. Etiam tristique tincidunt odio, sit amet pharetra urna accumsan id. Etiam eget consequat libero. Sed volutpat malesuada ultricies. Suspendisse vitae dui eu risus cursus tristique. Vivamus ac malesuada mauris. Cras a dignissim erat, eu facilisis magna. Phasellus elit dolor, porttitor vel velit quis, mollis sagittis sem. </p>
       </div>
   </p/ost>
   <p/ost>
       <title>Public Lorem Ipsum 4</title>
       <subtitle>264 words from Lipsum.com</subtitle>
       <author>
           <first_name>Joe</first_name>
           <last_name>Jerryfield</last_name>
           <email>joejfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>Abi</first_name>
               <last_name>Andres</last_name>
               <email>abiandres@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-medium</theme>
       <topics>
           <topic_name>Public Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>public</tag_name>
       </tags>
       <post_order>4</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vel metus sit amet dolor eleifend cursus id non tortor. Curabitur a malesuada libero. Suspendisse interdum dapibus nunc, ac cursus lacus semper nec. Cras faucibus auctor odio, vulputate gravida magna eleifend vel. Cras eu elit in enim faucibus dignissim a et purus. Vestibulum a sagittis neque. Praesent ut lectus diam. Fusce suscipit ac nunc vitae vulputate. Mauris dignissim ipsum mattis ligula ultricies blandit. Ut viverra sem at faucibus feugiat. Nullam lobortis elit in maximus sodales. In consequat erat vitae nisl porttitor rhoncus. Proin pulvinar dignissim purus, id sollicitudin justo luctus vestibulum.</p>
           <p>Morbi non tristique dolor. Sed pretium diam ut purus efficitur pellentesque. Phasellus malesuada at urna faucibus vestibulum. Donec gravida consequat metus nec finibus. Quisque nisl tellus, aliquam non tincidunt id, condimentum vel enim. Curabitur ornare, justo eu cursus lacinia, justo risus consectetur arcu, vitae posuere nisi elit non enim. Ut sagittis urna et lectus eleifend, a vestibulum ligula pellentesque. Donec porta interdum tellus vitae pellentesque. Maecenas efficitur vulputate neque in pharetra.</p>
           <p>Cras hendrerit felis at justo viverra, id gravida nibh ornare. Praesent nec nulla pretium tellus elementum ultrices. Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris sit amet suscipit metus, pharetra porta lacus. Integer nec tellus consequat, fringilla eros ut, pulvinar felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut volutpat, tellus eu vulputate tincidunt, ligula diam pulvinar sem, nec eleifend felis quam et velit. Aenean nec dictum est. Cras tincidunt interdum blandit. Vestibulum id porta nisi. In hac habitasse platea dictumst. Mauris eget varius lectus, sit amet pharetra est. </p>
       </div>
   </p/ost>
   <p/ost>
       <title>Welcome to Subscribed Lorem</title>
       <subtitle>First post in the subscribed Lorem Ipsum blog</subtitle>
       <author>
           <first_name>Liz</first_name>
           <last_name>Longerfield</last_name>
           <email>lizlfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-narrow</theme>
       <topics>
           <topic_name>Subscribed Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>0</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>This Blog is a Subscribed Topic. The content of these posts are generated through <a href='www.lipsum.com'>lipsum.com</a>. The purpose of this blog is the show that a subscribed topic on this site can be viewable by anyone who is subscribed for free. See the <a href='/topics/'>topics</a> page to view additional topics (often called Categories). Use the "View As" dropdown above to change who you are viewing as.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Subscribed Lorem Ipsum 1</title>
       <subtitle>446 words from Lipsum.com</subtitle>
       <author>
           <first_name>Liz</first_name>
           <last_name>Longerfield</last_name>
           <email>lizlfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-narrow</theme>
       <topics>
           <topic_name>Subscribed Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>1</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eget commodo felis. Aliquam tellus tortor, dignissim in cursus a, posuere eget metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In a sagittis dolor. Nunc efficitur urna eget arcu porttitor dignissim. Ut efficitur ultricies enim in suscipit. Mauris ut suscipit augue. Vivamus consequat risus et lectus congue, sit amet accumsan mauris iaculis. Maecenas rutrum commodo vulputate. Phasellus molestie ut ligula in rutrum. Donec sed nibh velit. Donec dictum est sem, in imperdiet ante suscipit at.</p>
           <p>Donec non lorem ac ipsum aliquet suscipit lobortis at urna. Nunc egestas turpis lorem, in euismod magna gravida ut. In sed molestie nisi. Vivamus non pulvinar lacus. Sed maximus urna eu lorem mollis, vel mollis turpis egestas. Vivamus eleifend metus tellus, a aliquam eros volutpat ac. Duis vitae porttitor nulla, vitae ultrices sapien. Mauris eu lorem felis. Suspendisse ultricies, enim in aliquet interdum, risus orci efficitur sem, non iaculis nunc velit id elit.</p>
           <p>Integer ac ipsum dolor. Sed quis diam in neque rhoncus pulvinar. Cras vel mi efficitur, vestibulum odio euismod, euismod lorem. In odio ipsum, laoreet vitae porttitor ut, cursus bibendum neque. Vestibulum neque mauris, convallis in semper nec, faucibus ut odio. Praesent et nunc ut quam semper finibus at vel sapien. Maecenas iaculis mauris at ante mattis aliquet at et nisi. Donec ac ipsum at ligula facilisis molestie a nec augue. Etiam sit amet orci euismod, porta diam in, varius nisl. Phasellus varius, lectus eget molestie facilisis, justo ipsum molestie ligula, sed accumsan lorem mauris a sem. Curabitur tortor erat, molestie nec pharetra at, accumsan sed velit. Curabitur molestie elit orci, sed lacinia nibh dapibus eu. Sed sem mauris, malesuada eget dapibus non, mollis sit amet tortor. Proin hendrerit, velit euismod iaculis commodo, diam urna pretium lacus, vel mattis libero tellus sollicitudin metus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed vel libero vel est dictum venenatis laoreet non odio.</p>
           <p>Vivamus gravida turpis in nibh gravida, non imperdiet elit eleifend. Praesent egestas euismod lorem ut vulputate. Phasellus luctus feugiat ex eget commodo. Suspendisse mattis, ante nec dapibus fermentum, ligula quam porttitor eros, vitae mattis mauris tellus id enim. Nullam placerat metus eget porta pretium. Pellentesque in nibh at ipsum imperdiet placerat ac et massa. Nulla aliquet ante quis tempor tristique. Praesent turpis nisl, fermentum ut feugiat sed, porttitor in elit. Nullam quis dui vehicula, sagittis mi vel, sodales eros. Pellentesque dolor ante, maximus eu dolor nec, aliquam iaculis magna. Vivamus eget dignissim dui. Morbi elementum maximus eleifend. Aliquam fringilla aliquam elementum. Pellentesque vestibulum ligula fermentum risus ultrices vulputate. Integer purus urna, sagittis a facilisis quis, consectetur nec mi.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Subscribed Lorem Ipsum 2</title>
       <subtitle>341 words from Lipsum.com</subtitle>
      <author>
           <first_name>Liz</first_name>
           <last_name>Longerfield</last_name>
           <email>lizlfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-narrow</theme>
       <topics>
           <topic_name>Subscribed Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>2</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat, sem nec tincidunt sollicitudin, augue eros tempor diam, ac porta tortor quam varius dui. Sed eu nulla non ex laoreet fringilla vitae vitae velit. Donec lobortis odio a mi tempor, in congue nisl varius. Proin eu porttitor eros. Praesent hendrerit, ex id interdum ornare, massa lorem feugiat mauris, sed molestie nunc neque quis nulla. Nunc dictum nisi et odio pulvinar, non aliquam elit viverra. Fusce faucibus feugiat magna non molestie. Pellentesque ligula ex, vulputate non cursus sed, vestibulum id enim. Mauris sed posuere purus, in luctus leo.</p>
           <p>Aliquam enim risus, lacinia a maximus id, ullamcorper non felis. Sed ac nulla ut ipsum eleifend lobortis. Vivamus id pretium velit. Nunc cursus elit magna, non efficitur arcu auctor eu. Proin ac nunc sit amet metus eleifend cursus. Cras metus quam, gravida et turpis sit amet, feugiat efficitur dui. Aliquam eu porta tortor. Integer nisl lorem, convallis egestas rhoncus vitae, interdum id orci. Nam euismod lacinia libero, ac tincidunt erat consequat efficitur. Ut in ex a urna interdum maximus quis sed odio. Sed semper porta augue, vitae gravida lacus fermentum eu. Integer interdum lacus mauris. Vestibulum eu enim sit amet est mattis vehicula.</p>
           <p>Curabitur vestibulum sodales arcu nec vulputate. Integer rutrum est at nibh pellentesque, id bibendum tellus dictum. Vivamus in mollis arcu. Donec eget turpis aliquam, semper quam eget, ultricies tellus. Sed bibendum erat non justo pulvinar, vitae ultricies purus varius. Donec suscipit purus ipsum, et lacinia ex luctus a. Cras euismod quam eu orci consequat aliquam et at ex.</p>
           <p>Maecenas eget purus ut nisi semper volutpat nec non est. Aliquam eu metus sed odio accumsan congue eget volutpat nibh. Suspendisse potenti. Sed purus nulla, rutrum et metus at, congue egestas nisi. Mauris euismod non neque blandit ultrices. Donec euismod nunc est, vel pellentesque neque iaculis a. Proin pretium a neque id luctus. Vestibulum vitae est lacinia, malesuada augue sed, lobortis sapien. In pulvinar dui tincidunt velit maximus, sit amet semper libero egestas. Nulla molestie libero nec dolor facilisis, a elementum orci fermentum.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Subscribed Lorem Ipsum 3</title>
       <subtitle>239 words from Lipsum.com</subtitle>
      <author>
           <first_name>Liz</first_name>
           <last_name>Longerfield</last_name>
           <email>lizlfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-narrow</theme>
       <topics>
           <topic_name>Subscribed Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>3</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam leo nibh, auctor in hendrerit eu, iaculis quis odio. Praesent a mi eu est gravida venenatis. Nunc consectetur nibh vitae ante finibus blandit. Etiam mattis finibus efficitur. Nam semper, velit et auctor rutrum, lacus velit euismod lectus, vitae mattis sem ex ut massa. Aenean gravida dui ut orci accumsan, in tincidunt ex volutpat. Maecenas nec lobortis nibh, eu dictum velit. Morbi sit amet ultrices ex. Pellentesque volutpat sit amet dui at viverra.</p>
           <p>Mauris molestie pharetra nulla vitae laoreet. Vivamus ut ultrices purus, eget faucibus risus. Nunc tincidunt metus quis eleifend pellentesque. Vestibulum egestas velit purus, in posuere elit porttitor eu. Pellentesque ultrices tincidunt metus, a sagittis ipsum pretium ut. Vivamus sodales ligula molestie mauris auctor gravida. Quisque sollicitudin eros quis quam dignissim eleifend et ut orci. Aenean in vehicula justo. Phasellus viverra consequat turpis vel tempus. Sed vulputate sapien sit amet metus pharetra, iaculis tincidunt est commodo.</p>
           <p>Integer nec eleifend velit, a commodo ipsum. Aliquam venenatis urna ac nulla faucibus, non aliquet elit iaculis. Ut ut tortor vulputate, porttitor lacus ut, viverra ex. Vivamus ut suscipit massa. Curabitur a pellentesque enim, in bibendum odio. Etiam tristique tincidunt odio, sit amet pharetra urna accumsan id. Etiam eget consequat libero. Sed volutpat malesuada ultricies. Suspendisse vitae dui eu risus cursus tristique. Vivamus ac malesuada mauris. Cras a dignissim erat, eu facilisis magna. Phasellus elit dolor, porttitor vel velit quis, mollis sagittis sem. </p>
       </div>
   </p/ost>
   <p/ost>
       <title>Subscribed Lorem Ipsum 4</title>
       <subtitle>264 words from Lipsum.com</subtitle>
      <author>
           <first_name>Liz</first_name>
           <last_name>Longerfield</last_name>
           <email>lizlfield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Bright-narrow</theme>
       <topics>
           <topic_name>Subscribed Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>4</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vel metus sit amet dolor eleifend cursus id non tortor. Curabitur a malesuada libero. Suspendisse interdum dapibus nunc, ac cursus lacus semper nec. Cras faucibus auctor odio, vulputate gravida magna eleifend vel. Cras eu elit in enim faucibus dignissim a et purus. Vestibulum a sagittis neque. Praesent ut lectus diam. Fusce suscipit ac nunc vitae vulputate. Mauris dignissim ipsum mattis ligula ultricies blandit. Ut viverra sem at faucibus feugiat. Nullam lobortis elit in maximus sodales. In consequat erat vitae nisl porttitor rhoncus. Proin pulvinar dignissim purus, id sollicitudin justo luctus vestibulum.</p>
           <p>Morbi non tristique dolor. Sed pretium diam ut purus efficitur pellentesque. Phasellus malesuada at urna faucibus vestibulum. Donec gravida consequat metus nec finibus. Quisque nisl tellus, aliquam non tincidunt id, condimentum vel enim. Curabitur ornare, justo eu cursus lacinia, justo risus consectetur arcu, vitae posuere nisi elit non enim. Ut sagittis urna et lectus eleifend, a vestibulum ligula pellentesque. Donec porta interdum tellus vitae pellentesque. Maecenas efficitur vulputate neque in pharetra.</p>
           <p>Cras hendrerit felis at justo viverra, id gravida nibh ornare. Praesent nec nulla pretium tellus elementum ultrices. Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris sit amet suscipit metus, pharetra porta lacus. Integer nec tellus consequat, fringilla eros ut, pulvinar felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut volutpat, tellus eu vulputate tincidunt, ligula diam pulvinar sem, nec eleifend felis quam et velit. Aenean nec dictum est. Cras tincidunt interdum blandit. Vestibulum id porta nisi. In hac habitasse platea dictumst. Mauris eget varius lectus, sit amet pharetra est. </p>
       </div>
   </p/ost>
   <p/ost>
       <title>Welcome to Premium Lorem</title>
       <subtitle>First post in the Premium Lorem Ipsum blog</subtitle>
       <author>
           <first_name>Ashley</first_name>
           <last_name>Atfield</last_name>
           <email>ashleyafield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Dark-wide</theme>
       <topics>
           <topic_name>Premium Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>0</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>This Blog is a Premium Topic. The content of these posts are generated through <a href='www.lipsum.com'>lipsum.com</a>. The purpose of this blog is the show that a premium topic on this site can be viewable only by those who is have a premium subscription. See the <a href='/topics/'>topics</a> page to view additional topics (often called Categories). Use the "View As" dropdown above to change who you are viewing as.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Premium Lorem Ipsum 1</title>
       <subtitle>446 words from Lipsum.com</subtitle>
      <author>
           <first_name>Ashley</first_name>
           <last_name>Atfield</last_name>
           <email>ashleyafield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Dark-wide</theme>
       <topics>
           <topic_name>Premium Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>1</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eget commodo felis. Aliquam tellus tortor, dignissim in cursus a, posuere eget metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In a sagittis dolor. Nunc efficitur urna eget arcu porttitor dignissim. Ut efficitur ultricies enim in suscipit. Mauris ut suscipit augue. Vivamus consequat risus et lectus congue, sit amet accumsan mauris iaculis. Maecenas rutrum commodo vulputate. Phasellus molestie ut ligula in rutrum. Donec sed nibh velit. Donec dictum est sem, in imperdiet ante suscipit at.</p>
           <p>Donec non lorem ac ipsum aliquet suscipit lobortis at urna. Nunc egestas turpis lorem, in euismod magna gravida ut. In sed molestie nisi. Vivamus non pulvinar lacus. Sed maximus urna eu lorem mollis, vel mollis turpis egestas. Vivamus eleifend metus tellus, a aliquam eros volutpat ac. Duis vitae porttitor nulla, vitae ultrices sapien. Mauris eu lorem felis. Suspendisse ultricies, enim in aliquet interdum, risus orci efficitur sem, non iaculis nunc velit id elit.</p>
           <p>Integer ac ipsum dolor. Sed quis diam in neque rhoncus pulvinar. Cras vel mi efficitur, vestibulum odio euismod, euismod lorem. In odio ipsum, laoreet vitae porttitor ut, cursus bibendum neque. Vestibulum neque mauris, convallis in semper nec, faucibus ut odio. Praesent et nunc ut quam semper finibus at vel sapien. Maecenas iaculis mauris at ante mattis aliquet at et nisi. Donec ac ipsum at ligula facilisis molestie a nec augue. Etiam sit amet orci euismod, porta diam in, varius nisl. Phasellus varius, lectus eget molestie facilisis, justo ipsum molestie ligula, sed accumsan lorem mauris a sem. Curabitur tortor erat, molestie nec pharetra at, accumsan sed velit. Curabitur molestie elit orci, sed lacinia nibh dapibus eu. Sed sem mauris, malesuada eget dapibus non, mollis sit amet tortor. Proin hendrerit, velit euismod iaculis commodo, diam urna pretium lacus, vel mattis libero tellus sollicitudin metus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed vel libero vel est dictum venenatis laoreet non odio.</p>
           <p>Vivamus gravida turpis in nibh gravida, non imperdiet elit eleifend. Praesent egestas euismod lorem ut vulputate. Phasellus luctus feugiat ex eget commodo. Suspendisse mattis, ante nec dapibus fermentum, ligula quam porttitor eros, vitae mattis mauris tellus id enim. Nullam placerat metus eget porta pretium. Pellentesque in nibh at ipsum imperdiet placerat ac et massa. Nulla aliquet ante quis tempor tristique. Praesent turpis nisl, fermentum ut feugiat sed, porttitor in elit. Nullam quis dui vehicula, sagittis mi vel, sodales eros. Pellentesque dolor ante, maximus eu dolor nec, aliquam iaculis magna. Vivamus eget dignissim dui. Morbi elementum maximus eleifend. Aliquam fringilla aliquam elementum. Pellentesque vestibulum ligula fermentum risus ultrices vulputate. Integer purus urna, sagittis a facilisis quis, consectetur nec mi.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Premium Lorem Ipsum 2</title>
       <subtitle>341 words from Lipsum.com</subtitle>
       <author>
           <first_name>Ashley</first_name>
           <last_name>Atfield</last_name>
           <email>ashleyafield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Dark-wide</theme>
       <topics>
           <topic_name>Premium Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>2</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat, sem nec tincidunt sollicitudin, augue eros tempor diam, ac porta tortor quam varius dui. Sed eu nulla non ex laoreet fringilla vitae vitae velit. Donec lobortis odio a mi tempor, in congue nisl varius. Proin eu porttitor eros. Praesent hendrerit, ex id interdum ornare, massa lorem feugiat mauris, sed molestie nunc neque quis nulla. Nunc dictum nisi et odio pulvinar, non aliquam elit viverra. Fusce faucibus feugiat magna non molestie. Pellentesque ligula ex, vulputate non cursus sed, vestibulum id enim. Mauris sed posuere purus, in luctus leo.</p>
           <p>Aliquam enim risus, lacinia a maximus id, ullamcorper non felis. Sed ac nulla ut ipsum eleifend lobortis. Vivamus id pretium velit. Nunc cursus elit magna, non efficitur arcu auctor eu. Proin ac nunc sit amet metus eleifend cursus. Cras metus quam, gravida et turpis sit amet, feugiat efficitur dui. Aliquam eu porta tortor. Integer nisl lorem, convallis egestas rhoncus vitae, interdum id orci. Nam euismod lacinia libero, ac tincidunt erat consequat efficitur. Ut in ex a urna interdum maximus quis sed odio. Sed semper porta augue, vitae gravida lacus fermentum eu. Integer interdum lacus mauris. Vestibulum eu enim sit amet est mattis vehicula.</p>
           <p>Curabitur vestibulum sodales arcu nec vulputate. Integer rutrum est at nibh pellentesque, id bibendum tellus dictum. Vivamus in mollis arcu. Donec eget turpis aliquam, semper quam eget, ultricies tellus. Sed bibendum erat non justo pulvinar, vitae ultricies purus varius. Donec suscipit purus ipsum, et lacinia ex luctus a. Cras euismod quam eu orci consequat aliquam et at ex.</p>
           <p>Maecenas eget purus ut nisi semper volutpat nec non est. Aliquam eu metus sed odio accumsan congue eget volutpat nibh. Suspendisse potenti. Sed purus nulla, rutrum et metus at, congue egestas nisi. Mauris euismod non neque blandit ultrices. Donec euismod nunc est, vel pellentesque neque iaculis a. Proin pretium a neque id luctus. Vestibulum vitae est lacinia, malesuada augue sed, lobortis sapien. In pulvinar dui tincidunt velit maximus, sit amet semper libero egestas. Nulla molestie libero nec dolor facilisis, a elementum orci fermentum.</p>
       </div>
   </p/ost>
   <p/ost>
       <title>Premium Lorem Ipsum 3</title>
       <subtitle>239 words from Lipsum.com</subtitle>
      <author>
           <first_name>Ashley</first_name>
           <last_name>Atfield</last_name>
           <email>ashleyafield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Dark-wide</theme>
       <topics>
           <topic_name>Premium Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>3</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam leo nibh, auctor in hendrerit eu, iaculis quis odio. Praesent a mi eu est gravida venenatis. Nunc consectetur nibh vitae ante finibus blandit. Etiam mattis finibus efficitur. Nam semper, velit et auctor rutrum, lacus velit euismod lectus, vitae mattis sem ex ut massa. Aenean gravida dui ut orci accumsan, in tincidunt ex volutpat. Maecenas nec lobortis nibh, eu dictum velit. Morbi sit amet ultrices ex. Pellentesque volutpat sit amet dui at viverra.</p>
           <p>Mauris molestie pharetra nulla vitae laoreet. Vivamus ut ultrices purus, eget faucibus risus. Nunc tincidunt metus quis eleifend pellentesque. Vestibulum egestas velit purus, in posuere elit porttitor eu. Pellentesque ultrices tincidunt metus, a sagittis ipsum pretium ut. Vivamus sodales ligula molestie mauris auctor gravida. Quisque sollicitudin eros quis quam dignissim eleifend et ut orci. Aenean in vehicula justo. Phasellus viverra consequat turpis vel tempus. Sed vulputate sapien sit amet metus pharetra, iaculis tincidunt est commodo.</p>
           <p>Integer nec eleifend velit, a commodo ipsum. Aliquam venenatis urna ac nulla faucibus, non aliquet elit iaculis. Ut ut tortor vulputate, porttitor lacus ut, viverra ex. Vivamus ut suscipit massa. Curabitur a pellentesque enim, in bibendum odio. Etiam tristique tincidunt odio, sit amet pharetra urna accumsan id. Etiam eget consequat libero. Sed volutpat malesuada ultricies. Suspendisse vitae dui eu risus cursus tristique. Vivamus ac malesuada mauris. Cras a dignissim erat, eu facilisis magna. Phasellus elit dolor, porttitor vel velit quis, mollis sagittis sem. </p>
       </div>
   </p/ost>
   <p/ost>
       <title>Premium Lorem Ipsum 4</title>
       <subtitle>264 words from Lipsum.com</subtitle>
      <author>
           <first_name>Ashley</first_name>
           <last_name>Atfield</last_name>
           <email>ashleyafield@website.com</email>
       </author>
       <contributors>
           <user type='container'>
               <first_name>John</first_name>
               <last_name>Jackson</last_name>
               <email>johnjackson@website.com</email>
           </user>
           <user type='container'>
               <first_name>Lucas</first_name>
               <last_name>Moyer</last_name>
               <email>admin@moyeraudio.com</email>
           </user>
       </contributors>
       <theme>Dark-wide</theme>
       <topics>
           <topic_name>Premium Blog</topic_name>
       </topics>
       <tags>
           <tag_name>Lorem Ipsum</tag_name>
           <tag_name>demo</tag_name>
           <tag_name>subscriber</tag_name>
       </tags>
       <post_order>4</post_order>
       <cover_img_link></cover_img_link>
       <div class='content'>
           <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vel metus sit amet dolor eleifend cursus id non tortor. Curabitur a malesuada libero. Suspendisse interdum dapibus nunc, ac cursus lacus semper nec. Cras faucibus auctor odio, vulputate gravida magna eleifend vel. Cras eu elit in enim faucibus dignissim a et purus. Vestibulum a sagittis neque. Praesent ut lectus diam. Fusce suscipit ac nunc vitae vulputate. Mauris dignissim ipsum mattis ligula ultricies blandit. Ut viverra sem at faucibus feugiat. Nullam lobortis elit in maximus sodales. In consequat erat vitae nisl porttitor rhoncus. Proin pulvinar dignissim purus, id sollicitudin justo luctus vestibulum.</p>
           <p>Morbi non tristique dolor. Sed pretium diam ut purus efficitur pellentesque. Phasellus malesuada at urna faucibus vestibulum. Donec gravida consequat metus nec finibus. Quisque nisl tellus, aliquam non tincidunt id, condimentum vel enim. Curabitur ornare, justo eu cursus lacinia, justo risus consectetur arcu, vitae posuere nisi elit non enim. Ut sagittis urna et lectus eleifend, a vestibulum ligula pellentesque. Donec porta interdum tellus vitae pellentesque. Maecenas efficitur vulputate neque in pharetra.</p>
           <p>Cras hendrerit felis at justo viverra, id gravida nibh ornare. Praesent nec nulla pretium tellus elementum ultrices. Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris sit amet suscipit metus, pharetra porta lacus. Integer nec tellus consequat, fringilla eros ut, pulvinar felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut volutpat, tellus eu vulputate tincidunt, ligula diam pulvinar sem, nec eleifend felis quam et velit. Aenean nec dictum est. Cras tincidunt interdum blandit. Vestibulum id porta nisi. In hac habitasse platea dictumst. Mauris eget varius lectus, sit amet pharetra est. </p>
       </div>
   </p/ost>
</p/ost_feed>
 
</code></pre>


<p>Now to parse and insert the data we run `python3 generate_posts.py` from Terminal</p>
<pre><code>

import customSQL
from customSQL import custom_SQL
 
import xml.etree.ElementTree as ET
 
def findTag(node,tagname):
   for n in node:
       if hasattr(n,'tag'):
           if n.tag == tagname:
               return n
 
def nested(node,tagname):
   group_list = []
   for item in findTag(node,tagname):
       nest_dict = dict()
       if 'type' in item.attrib.keys():
           for c in item:
               nest_dict[c.tag] = c.text
       else:
           nest_dict[item.tag] = item.text
       group_list.append(nest_dict)
   return group_list
 
def gather_posts(root, parser):
   postList = []
 
   for post in root:
       post_dict = dict()
 
       post_dict['title'] = findTag(post,'title').text
       post_dict['subtitle'] = findTag(post,'subtitle').text
       post_dict['author'] = nested(post,'author')
       post_dict['contributors'] = nested(post,'contributors')
       post_dict['theme'] = findTag(post,'theme').text
       post_dict['topics'] = nested(post,'topics')
       post_dict['tags'] = nested(post,'tags')
       post_dict['post_order'] = int(findTag(post,'post_order').text)
       post_dict['cover_img_link'] = findTag(post,'cover_img_link').text
       # post_dict['content'] = str(parser.tostring(findTag(post,'div'))).replace('"',"'").decode("utf-8")
       post_dict['content'] = parser.tostring(findTag(post,'div')).decode("utf-8")
      
       postList.append(post_dict)
  
   return postList
 
 
file = ET.parse('content/posts.xml')
feed = file.getroot()
posts = gather_posts(feed, ET)
 
 
update=True
 
Q = custom_SQL()
for post in posts:
   if update:
       row_id = customSQL.grab_article(Q,post['title'])['article_ID']
       print(row_id, post['title'],post['content'][:30])
       Q.update('Post','content',post['content'],row_id[0])
       print()
   else:
       row_id = customSQL.put_article(Q, post['title'],post['subtitle'],post['theme'],post['content'],post['post_order'])
 
       for topic in post['topics']:
           customSQL.put_topic_post(Q,topic['topic_name'],row_id)
 
       for tag in post['tags']:
           customSQL.put_tag(Q,tag['tag_name'],row_id)
 
       author_id = customSQL.grab_author_id(Q,post['author'][2]['email'])
       customSQL.put_writes(Q,row_id,author_id["ID"][0])
 
       for contributor in post['contributors']:
           cont_id = customSQL.grab_author_id(Q,contributor['email'])
           customSQL.put_contributes(Q,row_id,cont_id['ID'][0])
  
Q.commit()
Q.close()

</code></pre>
        </content>
    </post> 

<post>
        <title>Generating Stats Data</title>
        <subtitle>Simulating Views</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>14</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>This is a relatively straightforward process. The logic is to:</p>
<ul><li>Generate random fake IP addresses (I choose 2000 addresses)</li>
<li>Choose a timeframe to pretend these computers visited the website (I chose 2020-2021)</li>
<li>Randomize the number of visits each computer will make, and which posts are viewed (visit up to 10 pages no more than 10 times each, using numpy's normal distribution pattern centered around 1 visit)</li> 
<li>Randomize the date of visit</li></ul>
<br>
<p>Insert into Stats table</p>
<pre><code>
import customSQL
from customSQL import custom_SQL
 
import random
import math
import numpy as np
import time
 
def generateTime(startdate='2020-01-01 00:01:01', enddate='2021-12-30 23:59:59'):
   """
   Suggested time module usage by Tom Alsburg 2009-02-16
   https://stackoverflow.com/questions/553303/generate-a-random-date-between-two-other-dates
   """
   def convert(datestr):
       strip = time.strptime(datestr,'%Y-%m-%d %H:%M:%S')
       return time.mktime(strip)
 
   startdate = convert(startdate)
   enddate = convert(enddate)
   randtime = startdate + random.random() * (enddate - startdate)
   newtime = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(randtime))
   return newtime
 
 
if __name__=="__main__":
   Q = custom_SQL()
   article_ids = Q.select("article_ID","Post")['article_ID']
 
   print(article_ids)
 
   num = 2000
   random_IP = ['.'.join([str(random.randrange(200,800,10)) for r in range(4)]) for i in range(num)]
 
   # two thousand IP_addresses over the course of two years
   # each IP_address visits up to 10 pages up to 10(ish) times each
   # takes about 40minutes. can be faster by better opening/closing cursors
   simulate_update=[]
   for viewer in random_IP:
       num_of_pages = random.randint(1,10)
       for visits in [math.ceil(np.random.normal(0,1)**2) for r in range(num_of_pages)]:
           article = random.choice(article_ids)
           for v in range(visits):
               randtime = generateTime()
               simulate_update.append((viewer,article,randtime))
               customSQL.put_stat(Q,article,viewer,randtime)
   Q.commit()
   Q.close()
   simulate_update.sort()
   print(simulate_update)
 
 </code></pre>
        </content>
    </post> 

<post>
        <title>Generating Revenue Data</title>
        <subtitle>Simulating Subscriptions</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>15</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>This will handle both the subscriptions and the revenue</p>
<p>To do this we will follow the pattern:</p>
<ul><li>Make function to create a random subscriber email (junk letters and domain)</li>
<li>Generate a list of fake subscribers (I use 400) </li>
<li>Split subscribers into basic and premium subscribers (I intended to have more basic than premium, but my indexing at run time swapped them. It does not effect the project, and has been corrected in code)</li>
<li>Insert the subscribers into the Subscribes and Subscriber tables</li>
<li>For those selected to be Premium membership, insert email and *random pricepoints into the revenue table</li></ul>
<br>
<pre><code>
from generate_stats import generateTime
import customSQL
from customSQL import custom_SQL
import random
import string
 
def makeSubscriber():
   letters = string.ascii_letters
   numbers = string.digits
   name = ''.join(random.choice([random.choice(letters),random.choice(numbers)]) for i in range(15))
   com = random.choice(['com','org','net','web'])
   email = name+"@subscriber."+com
   return email
 
def subscribe(email_list,topic_list,membership):
   Q = custom_SQL()
   price_list = [*[10 for r in range(75)],*[20 for r in range(15)], *[40 for r in range(10)]]
   random.shuffle(price_list)
 
   for email in email_list:
       customSQL.put_subscriber(Q,email)
       randTopic = random.choice(topic_list)
       randDate = generateTime()
       customSQL.put_subscribes(Q,email,randTopic,membership,randDate)
       if membership == 'Premium':
           if email=='premiumSubscriber2@subs.org':
               continue
           customSQL.put_revenue(Q,email,random.choice(price_list),randDate)
  
   Q.commit()
   Q.close()
 
num_of_subscribers = 400
email_list = [makeSubscriber() for i in range(num_of_subscribers)]
 
 
Q = custom_SQL()
topics = customSQL.grab_all_topics(Q)['topic_name']
Q.close()
 
num_premium = random.randint(80,150)
 
basic_subs = email_list[num_premium:]
premium_subs = email_list[:num_premium]
 
 
 
subscribe(basic_subs,topics,'Subscriber')
subscribe(premium_subs,topics,'Premium')

</code></pre>
        </content>
    </post> 

<post>
        <title>Dashboard Styling and JS</title>
        <subtitle>Simulating Views</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>16</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>At this point, almost the whole project is done, save for some page styling and dashboard functionality. First, I will give the css. Then I will provide the javascript which the dashboard will use to run the server calls and handle the returned data. Finally, I will provide the server routes which the dashboard is making calls to. </p>
<br>
<p>Style.css</p>
<pre><code>

 
html {
   font-size: 22px;
   color:white;
   height: 100%;
}
 
body {
   min-height:100vh;
   background: var(--primary-color, rgb(66, 66, 66));
   margin:0 auto;
   padding:0;
   gap: 20px;
   display:grid;
   grid-template-rows: 250px 1fr 50px;
   grid-template-columns: 250px 1fr;
   grid-template-areas:
   "header header"
   "sidebar main"
   "footer footer";
  
   height:100%;
 
}
 
a {
   color:var(--secondary-color, golden-rod);
}
 
a:visited{
   opacity: .8;
}
 
h1 {
   color:rgb(49, 125, 153);
   font-weight: bold;
}
 
header {
   display:flex;
   padding: 25px;
   justify-content:space-between;
   background-color:#1C2833;
   margin-bottom:20px;
 
   grid-area:header;
}
 
aside {
   grid-area:sidebar;
   color:var(--text-color);
   padding-left:20px;
}
 
main {
   grid-area:main;
   width:var(--page-width, 100%);
   margin: 0 auto;
   color:var(--text-color,inherit);
   font-family:var(--font);
   padding-right:20px;
}
 
footer {
   grid-area:footer;
   text-align:center;
}
 
 
#post-nav {
   display:flex;
   justify-content: space-between;
}
 
#title {
   text-decoration: none;
   color:white;
   width:800px;
}
 
#head-nav-container {
   width:100%;
   display:flex;
   flex-direction:column;
   justify-content: space-between;
   display:relative;
}
 
#head-nav-upper, #head-nav-lower{
   align-self:end;
}
#head-nav-upper{
  align-items:right;
}
#head0nav-lower{
   width:100%;
}
 
#view-select label, select {
   display:block;
   width:200px;
}
 
#view-select label {
   text-align:center;
}
 
#header-nav ul{
   list-style-type:none;
  
}
 
#header-nav ul li {
   display:inline;
   margin:0 10px 0 10px;
}
 
#profile{
   text-align:center;
   margin-top:10px;
}
 
#end, #top{
   line-height:1.6em;
}
 
#profile-wrapper{
   display:flex;
   flex-direction:row;
}
 
#profile-wrapper img {
   width:300px;
   height:300px;
}
 
#profile-name-wrapper{
   display:flex;
   flex-direction:column;
   justify-content: space-around;
   margin-left:50px;
}
 
.divider{
   width: 80%;
   margin: 50px 0 50px 0;
 
}
 
div.about-wrapper {
   display:flex;
   flex-wrap:wrap;
}
 
figure img {
   width:300px;
   height:300px;
 
}
 
.user_avatar figcaption{
   text-align:center;
   font-size:1.4em;
}
 
 
#searchbar{
   width:500px;
   height:50px;
   margin:0 auto;
   display:inline;
}
 
#searchbar input{
   width:500px;
   height:50px;
   margin:0 auto;
   font-size:1.2em;
}
 
 
#searchsubmit{
   display:inline;
   height: 50px;
   width:100px;
   font-size:1.2em;
}
 
.search-results{
   width:800px;
   padding: 20px 0 20px 0;
}
 
#feed-sidebar{
   line-height:1.4em;
   list-style-type:none;
   padding:0;
}
 
 
/* Charts styling */
 
#stats-upper, #stats-lower{
   width:95%;
   min-width:800px;
   display:flex;
   flex-direction:row;
   justify-content: space-between;
}
 
#stats-upper {
   border-bottom:rgba(66, 66, 66,.2) 2px solid;
   margin-bottom: 40px;
   padding-bottom:40px;
}
 
#stats-upper-left, #stats-lower-left {
   border-right:rgba(66, 66, 66,.2) 2px solid;
   margin-right:40px;
   padding-right:40px;
}
 
#stats-upper-left, #stats-upper-right, #stats-lower-left, #stats-lower-right{
   width:45%;
}
 
#stats-upper-right{
   display:flex;
   flex-direction:row;
   align-items:center;
   justify-content: center;
}
 
#stats-kpi-1, #stats-kpi-2{
   width:250px;
   height:250px;
}
 
 
#stats-author-wrapper{
   display:flex;
   flex-direction:column;
}
 
.stats-author{
   width:100%;
   height:80px;
   display:flex;
   flex-direction:row;
   flex-wrap:nowrap;
   align-items:center;
   justify-content:space-between;
}
 
.stat-author-item{
   padding:5px;
 
}
 
/* author avatar */
.stat-author-item-1{
   flex-basis:50px;
   background-color:rgb(232, 157, 255);
   border-radius:50%;
   max-width:50%;
   height:50px;
}
/* author name */
.stat-author-item-2{
   width:90px;
}
/* author chart */
.stat-author-item-3{
   flex-basis:auto;
   height:60px;
}
/* author posts */
.stat-author-item-4{
   flex-basis:50px;
}
/* author revenue */
.stat-author-item-5{
   flex-basis:50px;
   text-align:right;
}
.stat-author-item-5::before{
   content:'$';
   display:inline;
}
 
#stats-author-header {
   align-items:flex-start;
}
 
#stats-author-header .stat-author-item-1{
   background-color:transparent;
}
 
#sidebar label{
   margin-top:20px;
}
 
#sidebar select{
   height:40px;
   font-size:.9em;
   margin-bottom:20px;
}
</code></pre>
<br>
<p>Script.js</p>
<pre><code>

function search(){
   console.log('you found me');
   const form = document.getElementById('searchbar');
   searchobj = {"search":form.childNodes[1].value}
 
   fetch('/search/',{
       method: 'POST',
       credentials:'same-origin',
       mode:'cors',
       headers: {
           'Content-Type':'application/json',
       },
       body: JSON.stringify(searchobj),
   })
   .then(res => res.json())
   .then(data => {
       console.log(data)
       if(!data.response){
           noResults()
       }
       else{
           populate(data['answer'])
       }
   })
}
 
function populate(results){
   container = document.getElementById('results');
   container.innerHTML = "";
   console.log('got to pupulate')
   console.log(results.length)
   for (i=0;i<results.length;i++){
       console.log(i)
       let wrapper, h3, p, a
       [wrapper,h3,p,a]= makeFeed();
       h3.innerText = results[i][0];
       p.innerText = results[i][2];
       a.href = "/topic/"+results[i][1]+"/"+results[i][0];
       a.appendChild(h3);
       a.appendChild(p);
       wrapper.appendChild(a);
       container.appendChild(wrapper);
   }
}
 
 
function noResults(){
   container = document.getElementById('results');
   container.innerHTML = '';
   h3 = document.createElement('h3');
   h3.innerText = 'There are no search results';
   container.appendChild(h3);
}
 
function makeFeed(){
   wrapper = document.createElement('div');
   wrapper.classList.add('search-results');
   a = document.createElement('a');
   a.classList.add('result-a');
   h3 = document.createElement('h3');
   h3.classList.add('title');
   p = document.createElement('p');
   p.classList.add('preview');
 
   return [wrapper,h3,p,a]
}
</code></pre>
<br>
<p>Chart.js</p>
<pre><code>
let chart1 = false;
let chart2 = false;
let chart3 = false;
 
chart4 = [false,false,false,false]
 
window.onload=()=>{
   resort_dashboard()
}
 
// UPPER LEFT CHART
 
async function build_ul_chart(type,year,month,unique){
   const data = await fetchAPI('views-time',{'type':type,'year':year,'month':month,'unique':unique})
   let x
   if (month){
       x = data.day
   }
   else if (year){
       console.log(data.month)
       const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']
       x = []
       for (i=0;i<data.month.length;i++){
           x.push(months[data.month[i]-1]);
       }
   }
   else{
       x = data.year.map(String);
   }   
 
   const y = data.viewers;
   const label = 'Site '+type;
 
   draw_ul_chart(x,y,label)
}
 
 
function draw_ul_chart(xdata,ydata,label){
  
   const ul_data = {
       labels:xdata,
       datasets:[
           {
               label:label,
               borderColor:'rgb(255,99,132)',
               data:ydata
           }
       ]
   };
 
   const ul_config = {
       type:'line',
       data:ul_data,
       options: {
           plugins:{
               title:{
                   display:true,
                   text:label,
                   fullSize:true,
                   font:{
                       size:24,
                   }
               },
               legend:{
                   display:false,
               }
           }
       }
   }
 
   if (chart1){
       chart1.data.labels = xdata;
       chart1.data.datasets.forEach((dataset) => {
           dataset.data = ydata;
           dataset.label = label;
       });
       chart1.options.plugins.title.text = label
       chart1.update();
   }else{
       chart1 = new Chart(
           document.getElementById('ul-chart'),
           ul_config
       )
 
   }
}
 
 
// UPPER RIGHT KPI
 
 
 
async function build_ur_chart(year,month){
   year = false
   month = false
   data_av = await fetchAPI('kpi',{'request':'KPI_av','year':year,'month':month})
   data_goal = await fetchAPI('kpi',{'request':'KPI_goal','year':year,'month':month})
  
  
   kpi1 = document.getElementById('kpi1');
   kpi2 = document.getElementById('kpi2');
   draw_circle(kpi1,data_av.fillColor,data_av.kpi,'av views');
   draw_circle(kpi2,data_goal.fillColor,data_goal.kpi+'%','mo. goal');
}
 
function draw_circle(canvas,color,kpi,message){
   c = canvas.getContext('2d');
   c.beginPath();
   c.fillStyle='white';
   c.height = 250;
   c.width = 250;
   x = c.width / 2;
   y = c.height / 2;
   c.arc(x,y, 100, 0, 2*Math.PI, false);
   c.fill();
 
   c.lineWidth = 8;
   c.strokeStyle = color;
   c.stroke();
 
   c.beginPath();
   c.fillStyle='black';
   c.font = '40px Ariel';
 
   if (message=='av views'){
       c.fillText(kpi,x-23,y)
       c.font = '20px Ariel';
       c.fillText(message,x-32,y+40)
   }else{
       c.fillText(kpi,x-40,y)
       c.font = '20px Ariel';
       c.fillText(message,x-32,y+40)
   }
   c.fill()
 
 
}
 
 
// LOWER LEFT CHART
 
async function build_ll_chart(type,category,year,month){
   const data = await fetchAPI('views-type',{'type':type,'category':category,'year':year,"month":month})
 
   const label = type + ' by ' + category
 
   const y = data.count_
   const x = data.cat_
   console.log(x,y)
 
   draw_ll_chart(x,y,label)
}
 
 
function draw_ll_chart(xdata,ydata,label){
 
   const ll_data = {
       labels:xdata,
       datasets:[
           {
               label:label,
               borderColor:'rgb(255,99,132)',
               data:ydata,
               backgroundColor:[
                   'rgba(54, 162, 235, 0.4)'
               ]
           }
       ]
   };
 
   const ll_config = {
       type:'bar',
       data:ll_data,
       options: {
           plugins:{
               title:{
                   display:true,
                   text:label,
                   fullSize:true,
                   font:{
                       size:24,
                   }
               },
               legend:{
                   display:false,
               }
           },
           indexAxis:'y',
       }
   };
 
   if (chart2){
       chart2.data.labels = xdata;
       chart2.data.datasets.forEach((dataset) => {
           dataset.data = ydata;
       });
       chart2.options.plugins.title.text = label
       chart2.update();
   }else{
       chart2 = new Chart(
           document.getElementById('ll-chart'),
           ll_config
       );
   }
 
};
 
 
 
// LOWER RIGHT CHART
 
 
async function build_lr_chart(type,year,month,unique){
   //Call for author list
  
   const data = await fetchAPI('authors',{'type':type,'year':year,'month':month,'unique':unique});
   const auth_stats_wrapper = document.getElementById('stats-author-wrapper');
 
   for (i=0;i<data.length;i++){
       let canvasID
       let row = data[i]
       if (!chart4[i]){
           let user_wrapper = document.createElement('div');
           let nid = "stats-"+row.author.replace(/\s/g,"-")
           user_wrapper.classList.add('stats-author');
           user_wrapper.id = nid;
          
           let img = make_avatar(row.avatar,1);
           let p_name = make_name(row.author,2);
           let [container,ID] = make_canvas(nid,3);
           let p_posts = make_post_stat(row.posts,4);
           let p_revenue = make_revenue_stat(row.revenue,5);
 
           let tags = [img,p_name,container,p_posts,p_revenue];
           for (j=0;j<tags.length;j++){
               user_wrapper.appendChild(tags[j]);
           canvasID = ID
           }
       auth_stats_wrapper.appendChild(user_wrapper);
      
       }
 
       let xdata = [...Array(row.views.month.length).keys()]
       let ydata = row.views.viewers
      
       draw_lr_chart(xdata,ydata,canvasID,i)
 
   }
}
 
 
function draw_lr_chart(xdata,ydata,domID,i){
   const lr_xLabs = xdata
   const lr_ycoord = ydata
 
   const lr_data = {
       labels:lr_xLabs,
       datasets:[
           {
               label:'',
               borderColor:'rgb(255,99,132)',
               data:lr_ycoord
           }
       ]
   };
 
   const lr_config = {
       type:'line',
       data:lr_data,
       options: {
           plugins:{
               title:{
                   display:false,
                   },
               legend:{
                   display:false,
               }
           },
           maintainAspectRatio:false,
           scales:{
               xAxis:{
                   display:false,
               },
               yAxis:{
                   display:false,
               }
           },
           elements:{
               point:{
                   radius: 0,
               }
           }
       }
   }
  
   if (chart4[i]){
       chart4[i].data.labels = lr_xLabs;
       chart4[i].data.datasets.forEach((dataset) => {
           dataset.data = lr_ycoord;
       });
       chart4[i].update();
   }else{
       const new_chart = new Chart(
           document.getElementById(domID),
           lr_config
       )
       chart4[i] = new_chart;
   }
 
}
 
function make_avatar(link,i){
   img = document.createElement('img');
   img.classList.add('stat-author-item','stat-author-item-'+i)
   linktext = "/img/"+link
   img.src = linktext;
   img.alt = "avatar from Pixabay.com";
   return img
}
 
function make_name(name,i){
   p = document.createElement('p');
   p.classList.add('stat-author-item','stat-author-item-'+i);
   p.innerText = name;
   return p
}
 
function make_post_stat(stat,i){
   p = document.createElement('p');
   p.classList.add('stat-author-item','stat-author-item-'+i);
   p.innerText = stat;
   return p
}
 
function make_revenue_stat(stat,i){
   p = document.createElement('p');
   p.classList.add('stat-author-item','stat-author-item-'+i);
   p.innerText = stat;
   return p
}
 
function make_canvas(nid,i){
   container = document.createElement('div');
   container.classList.add('stats-sparkline','stat-author-item','stat-author-item-'+i);
   canvas = document.createElement('canvas');
   canvas.id=nid+"-spark";
   container.appendChild(canvas);
   return [container, canvas.id]
}
 
 
 
function resort_dashboard(){
 
   let unique = document.getElementById('_type-all').value;
   let year = document.getElementById('sort-year').value
   let month = document.getElementById('sort-month').value
   const view_subs = document.getElementById('sort-graph').value
   const top_tag = document.getElementById('sort-graph-2').value
 
   if (unique == 'false'){
       unique = false;
   }else{
       unique = true;
   }
   if (year == 'false'){
       year = false;
   }else{
       year = parseInt(year);
   }
   if (month == 'false'){
       month = false;
   }else{
       month = parseInt(month);
   }
 
   build_ul_chart(view_subs,year,month,unique)
   build_ur_chart(year,month)
   build_ll_chart(view_subs,top_tag,year,month)
   build_lr_chart(view_subs,year,month,unique)
  
}
</code></pre>
<br>
<p>dashAPI.js</p>
<pre><code>
async function fetchAPI(path,obj){
   const url = '/stats/'+path+'/';
   const call = await fetch(url,{
       method: 'POST',
       credentials:'same-origin',
       mode:'cors',
       headers: {
           'Content-Type':'application/json',
       },
       body: JSON.stringify(obj),
   })
   const parsed = await call.json()
  
   return parsed
}
</code></pre>
<br>
<p>Dashboard Routing</p>
<br>
<p>Dashapp.py</p>
<pre><code>
from flask import Blueprint, render_template, session, request, redirect,jsonify, send_file
 
import dashboard
# from dashboard import *
import customSQL
from customSQL import custom_SQL
 
dashapp = Blueprint('dashapp',__name__,template_folder='templates')
 
@dashapp.route('/dashboard/')
def dashboard_():
   if session['role'] not in ['admin']:
       return redirect('/home')
  
   user_stats = {}
   if session['role'] == 'admin':
       pass
   if session['role'] == 'author':
       pass
   elif session['role'] == 'contributor':
       pass
 
 
   return render_template('dashboard.html',
       role=session['role']
   )
 
 
@dashapp.route('/stats', methods=['POST'])
def s():
   req = request.json
 
 
@dashapp.route('/stats/authors/', methods=['POST'])
def statsauthors():
   req = request.json
   print(req)
   Q = custom_SQL()
   to_return = []
   auth_stats = dashboard.stat_author_stats(Q)
   if req['type'] == 'views':
       func = dashboard.stat_author_views_time
   else:
       func = dashboard.stat_author_subs_time
 
   for i in range(len(auth_stats['author'])):
       name = auth_stats['author'][i]
       to_return.append({
           "author":auth_stats['author'][i],
           "avatar":auth_stats['avatar_link'][i],
           "posts":auth_stats['post'][i],
           "revenue":auth_stats['revenue'][i],
           "views":func(Q,name,req['year'],req['month'],req['unique'])
           })
   # print(to_return)
   Q.close()
   return jsonify(to_return)
  
 
@dashapp.route('/stats/views-time/', methods=['POST'])
def viewstime():
   req = request.json
   Q = custom_SQL()
   if req['type'] == 'views':
       views = dashboard.stat_views_site_time(Q,req['year'],req['month'],req['unique'])
       return jsonify(views)
   elif req['type'] == 'subs':
       subs = dashboard.stat_subs_site_time(Q,req['year'],req['month'],req['unique'])
       return jsonify(subs)
 
@dashapp.route('/stats/views-type/', methods=['POST'])
def viewstype():
   req = request.json
   Q = custom_SQL()
   if req['category'] == 'tag':
       if req['type'] == 'views':
           views = dashboard.stat_views_tag_time(Q,req['year'],req['month'])
           return jsonify(views)
       if req['type'] == 'subs':
           views = dashboard.stat_subs_tag_time(Q,req['year'],req['month'])
           return jsonify(views)
   if req['category'] == 'topic':
       if req['type'] == 'views':
           views = dashboard.stat_all_topic_views_time(Q,req['year'],req['month'])
           return jsonify(views)
       if req['type'] == 'subs':
           views = dashboard.stat_all_topic_subs_time(Q,req['year'],req['month'])
          
           return jsonify(views)
 
@dashapp.route('/stats/kpi/', methods=['POST'])
def stats():
   Q = custom_SQL()
   req = request.json
   if req['request'] == "KPI_av":
       kpi = dashboard.kpi_site_view_av_day_month(Q,req['year'],req['month'])
       if kpi[0][0]<10:
           fillColor = 'orange'
       elif kpi[0][0]<25:
           fillColor = 'yellow'
       else:
           fillColor = 'green'
      
       return jsonify({"fillColor":fillColor,"kpi":kpi[0]})
   elif req['request'] == "KPI_goal":
       kpi = dashboard.kpi_site_month_goals(Q,req['year'],req['month'])
       if kpi[0][0]<65:
           fillColor = 'red'
       elif kpi[0][0]<90:
           fillColor = 'orange'
       else:
           fillColor = 'green'
      
       return jsonify({"fillColor":fillColor,"kpi":kpi[0]})
  
 
@dashapp.route('/img/<filename>', methods=['GET'])
def showimg(filename):
   return send_file('static/img/'+filename,mimetype='image/png')

</code></pre>
        </content>
    </post> 



<post>
        <title>Functionality</title>
        <subtitle>Known Bugs</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>17</post_order>
        <cover_img_link></cover_img_link>
        <content>
<ol><li>The pages have inconsistent theme properties. This not a bug so much as randomized design to show that individual pages(posts) can have unique formatting</li>
<li>External links do not always render correctly. This is a Flask routing issue that needs further exploration. Typical answers include using url_for() or prepending https://. These are so far unsuccessful. I choose to leave them as-is for now and pursue an answer before production </li>
<li>Serving Images runs into problems. This is a Flask routing concern to research.</li>
<li>On the posts, there is a “Previous” and “Next” link to take a reader through the blog. There is an issue with Python's Mysql.connector rendering the request properly. From Workbench, the same query successfully provides the title which will take the reader to the next or previous page in the topic order. However, I cannot get the Python constructors to replicate this. I will need to find a solution or alternative before production. </li>
<li>On the Search page, using “enter” resets the page with a Get request. This is a matter of disabling the form action with javascript. I haven't had time to fix this.</li>
<li>On the Search page, the previews render raw html formatting. It would be good to insert a new 'Preview' Column to the Post table, to allow the author to manually type a raw text description or first sentences. This would be used for RSS feeds as well.</li>
<li>On the Dashboard, the KPI section does not adjust to parameters. This is due to the way the python sql function was built, and I did not have time to update it. The same is true for the Author's individual KPI's which use a view. I would need to recreate the view with the appropriate parameters. </li>
<li>On the Dashboard, the Author's engagement sparklines are individually scaled, and do not correspond to one another. </li>
<li>On the Dashboard, using the 'unique' filter sometimes does not appear to do anything. This is because the data is not quite as tailored for this. In a real-world production, the difference between unique visitors and return visitors is more obvious. </li></ol>

        </content>
    </post> 

<post>
        <title>Plans for the Future</title>
        <subtitle>Where to go from here?</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>17</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>My plans for this project are not to put it on the back shelf. Instead, I will continue to create solutions/patches for each of the bugs represented above. I will alter some of the tables to allow for more data to be collected in the future. I also want to create a more robust network of selects, inserts, and updates. My current process is rather chaotic. With a more streamlined modularized approach, I can deploy the application swiftly and efficiently while also making it more legible. Fully commented code is a highly lacking part of this current submission. The end goal is to use this platform to build websites for clients with yet to be built UX for administrators/authors/contributors. </p>
        </content>
    </post> 

<post>
        <title>What I Learned</title>
        <subtitle>This was more than just a test</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>18</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Building a database website from scratch has been highly challenging and highly informative. I live with dozens of open browser tabs doing research at every few lines of code. I see this as a powerful opportunity for growth. One of the most valuable aspects of SQL theory is planning down the road. The process of diagramming and modeling, while at first laborious and seemingly pointless, is remarkably useful once later stages of development roll around. There were many points at which I needed to implement a process and realized that forethought from months ago saved me having to rebuild the whole database. Other times there were features that I wanted to implement, but couldn't without starting from scratch. Using this project as my Beta has advanced my expertise in both SQL, coding, and project management. </p>
<p>I want to thank my instructors for allowing me to tackle this project. I had some trepidation that the goals would be sufficient. But, having walked (at times slogged) through the process, I have now realized what my instructors have: building a functional website with databases is a tall order. </p>
<p>I also want to thank two services which I used: lipsum.org for making free content generation. And Chartjs.org for making such beautiful and interactive javascript charts. Their free API and excellent documentation is unparalleled.</p>
        </content>
    </post> 

<post>
        <title>Building the Project</title>
        <subtitle>Reduplicating the Project</subtitle>
        <author>
            <first_name>Lucas</first_name>
            <last_name>Moyer</last_name>
            <email>admin@moyeraudio.com</email>
        </author>
        <contributors>
            <user>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Project_Full</topic_name>
        </topics>
        <tags>
            <tag_name>coding</tag_name>
            <tag_name>database</tag_name>
        </tags>
        <post_order>19</post_order>
        <cover_img_link></cover_img_link>
        <content>
<p>Here is a bullet point walk through for rebuilding the project. This assumes that you have access to the .zip files and either a local or web MySQL server with personal access credentials. </p>
<br>
<ol><li>Boot up an SQL server</li>
<li>Connect with Workbench </li>
<li>Load .sql files from the sql_files folder on root</li>
<li>Create a custom database (mine was “moyeraud_website-builder”) </li>
<li>Build the tables and basic inserts from `capstone_init` and `INSERTS` and `ViewsFuncProc` (be mindful of known INSERT bugs based on Primary Keys with timestamps)</li>
<li>Use the rest of the files as references for queries</li>
<li>Supply the login information to mysql.connector at the top of `customSQL.py`</li>
<li>From terminal, run `generate_posts.py`, `generate_stats.py` and `generate_revenue.py` in that order</li>
<li>Run Flask using `webapp.py` as the entry file</li></ol>

        </content>
    </post> 

<!-- 



    <post>
        <title>Welcome to Public Lorem</title>
        <subtitle>First post in the public Lorem Ipsum blog</subtitle>
        <author>
            <first_name>Joe</first_name>
            <last_name>Jerryfield</last_name>
            <email>joejfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>Abi</first_name>
                <last_name>Andres</last_name>
                <email>abiandres@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Public Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>public</tag_name>
        </tags>
        <post_order>0</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>This Blog is a public Topic. The content of these post are generated through <a href='https://www.lipsum.com'>lipsum.com</a>. The purpose of this blog is the show that a public topic on this site can be viewable by anyone without needed to be logged in or subscribed. See the <a href='/topics/'>topics</a> page to view additional topics (often called Categories). Use the "View As" dropdown above to change who you are viewing as.</p>
        </div>
    </post>
    <post>
        <title>Public Lorem Ipsum 1</title>
        <subtitle>446 words from Lipsum.com</subtitle>
        <author>
            <first_name>Joe</first_name>
            <last_name>Jerryfield</last_name>
            <email>joejfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>Abi</first_name>
                <last_name>Andres</last_name>
                <email>abiandres@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Public Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>public</tag_name>
        </tags>
        <post_order>1</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eget commodo felis. Aliquam tellus tortor, dignissim in cursus a, posuere eget metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In a sagittis dolor. Nunc efficitur urna eget arcu porttitor dignissim. Ut efficitur ultricies enim in suscipit. Mauris ut suscipit augue. Vivamus consequat risus et lectus congue, sit amet accumsan mauris iaculis. Maecenas rutrum commodo vulputate. Phasellus molestie ut ligula in rutrum. Donec sed nibh velit. Donec dictum est sem, in imperdiet ante suscipit at.</p>
            <p>Donec non lorem ac ipsum aliquet suscipit lobortis at urna. Nunc egestas turpis lorem, in euismod magna gravida ut. In sed molestie nisi. Vivamus non pulvinar lacus. Sed maximus urna eu lorem mollis, vel mollis turpis egestas. Vivamus eleifend metus tellus, a aliquam eros volutpat ac. Duis vitae porttitor nulla, vitae ultrices sapien. Mauris eu lorem felis. Suspendisse ultricies, enim in aliquet interdum, risus orci efficitur sem, non iaculis nunc velit id elit.</p>
            <p>Integer ac ipsum dolor. Sed quis diam in neque rhoncus pulvinar. Cras vel mi efficitur, vestibulum odio euismod, euismod lorem. In odio ipsum, laoreet vitae porttitor ut, cursus bibendum neque. Vestibulum neque mauris, convallis in semper nec, faucibus ut odio. Praesent et nunc ut quam semper finibus at vel sapien. Maecenas iaculis mauris at ante mattis aliquet at et nisi. Donec ac ipsum at ligula facilisis molestie a nec augue. Etiam sit amet orci euismod, porta diam in, varius nisl. Phasellus varius, lectus eget molestie facilisis, justo ipsum molestie ligula, sed accumsan lorem mauris a sem. Curabitur tortor erat, molestie nec pharetra at, accumsan sed velit. Curabitur molestie elit orci, sed lacinia nibh dapibus eu. Sed sem mauris, malesuada eget dapibus non, mollis sit amet tortor. Proin hendrerit, velit euismod iaculis commodo, diam urna pretium lacus, vel mattis libero tellus sollicitudin metus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed vel libero vel est dictum venenatis laoreet non odio.</p>
            <p>Vivamus gravida turpis in nibh gravida, non imperdiet elit eleifend. Praesent egestas euismod lorem ut vulputate. Phasellus luctus feugiat ex eget commodo. Suspendisse mattis, ante nec dapibus fermentum, ligula quam porttitor eros, vitae mattis mauris tellus id enim. Nullam placerat metus eget porta pretium. Pellentesque in nibh at ipsum imperdiet placerat ac et massa. Nulla aliquet ante quis tempor tristique. Praesent turpis nisl, fermentum ut feugiat sed, porttitor in elit. Nullam quis dui vehicula, sagittis mi vel, sodales eros. Pellentesque dolor ante, maximus eu dolor nec, aliquam iaculis magna. Vivamus eget dignissim dui. Morbi elementum maximus eleifend. Aliquam fringilla aliquam elementum. Pellentesque vestibulum ligula fermentum risus ultrices vulputate. Integer purus urna, sagittis a facilisis quis, consectetur nec mi.</p> 
        </div>
    </post>
    <post>
        <title>Public Lorem Ipsum 2</title>
        <subtitle>341 words from Lipsum.com</subtitle>
        <author>
            <first_name>Joe</first_name>
            <last_name>Jerryfield</last_name>
            <email>joejfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>Abi</first_name>
                <last_name>Andres</last_name>
                <email>abiandres@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Public Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>public</tag_name>
        </tags>
        <post_order>2</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat, sem nec tincidunt sollicitudin, augue eros tempor diam, ac porta tortor quam varius dui. Sed eu nulla non ex laoreet fringilla vitae vitae velit. Donec lobortis odio a mi tempor, in congue nisl varius. Proin eu porttitor eros. Praesent hendrerit, ex id interdum ornare, massa lorem feugiat mauris, sed molestie nunc neque quis nulla. Nunc dictum nisi et odio pulvinar, non aliquam elit viverra. Fusce faucibus feugiat magna non molestie. Pellentesque ligula ex, vulputate non cursus sed, vestibulum id enim. Mauris sed posuere purus, in luctus leo.</p>
            <p>Aliquam enim risus, lacinia a maximus id, ullamcorper non felis. Sed ac nulla ut ipsum eleifend lobortis. Vivamus id pretium velit. Nunc cursus elit magna, non efficitur arcu auctor eu. Proin ac nunc sit amet metus eleifend cursus. Cras metus quam, gravida et turpis sit amet, feugiat efficitur dui. Aliquam eu porta tortor. Integer nisl lorem, convallis egestas rhoncus vitae, interdum id orci. Nam euismod lacinia libero, ac tincidunt erat consequat efficitur. Ut in ex a urna interdum maximus quis sed odio. Sed semper porta augue, vitae gravida lacus fermentum eu. Integer interdum lacus mauris. Vestibulum eu enim sit amet est mattis vehicula.</p>
            <p>Curabitur vestibulum sodales arcu nec vulputate. Integer rutrum est at nibh pellentesque, id bibendum tellus dictum. Vivamus in mollis arcu. Donec eget turpis aliquam, semper quam eget, ultricies tellus. Sed bibendum erat non justo pulvinar, vitae ultricies purus varius. Donec suscipit purus ipsum, et lacinia ex luctus a. Cras euismod quam eu orci consequat aliquam et at ex.</p>
            <p>Maecenas eget purus ut nisi semper volutpat nec non est. Aliquam eu metus sed odio accumsan congue eget volutpat nibh. Suspendisse potenti. Sed purus nulla, rutrum et metus at, congue egestas nisi. Mauris euismod non neque blandit ultrices. Donec euismod nunc est, vel pellentesque neque iaculis a. Proin pretium a neque id luctus. Vestibulum vitae est lacinia, malesuada augue sed, lobortis sapien. In pulvinar dui tincidunt velit maximus, sit amet semper libero egestas. Nulla molestie libero nec dolor facilisis, a elementum orci fermentum.</p>
        </div>
    </post>
    <post>
        <title>Public Lorem Ipsum 3</title>
        <subtitle>239 words from Lipsum.com</subtitle>
        <author>
            <first_name>Joe</first_name>
            <last_name>Jerryfield</last_name>
            <email>joejfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>Abi</first_name>
                <last_name>Andres</last_name>
                <email>abiandres@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Public Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>public</tag_name>
        </tags>
        <post_order>3</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam leo nibh, auctor in hendrerit eu, iaculis quis odio. Praesent a mi eu est gravida venenatis. Nunc consectetur nibh vitae ante finibus blandit. Etiam mattis finibus efficitur. Nam semper, velit et auctor rutrum, lacus velit euismod lectus, vitae mattis sem ex ut massa. Aenean gravida dui ut orci accumsan, in tincidunt ex volutpat. Maecenas nec lobortis nibh, eu dictum velit. Morbi sit amet ultrices ex. Pellentesque volutpat sit amet dui at viverra.</p>
            <p>Mauris molestie pharetra nulla vitae laoreet. Vivamus ut ultrices purus, eget faucibus risus. Nunc tincidunt metus quis eleifend pellentesque. Vestibulum egestas velit purus, in posuere elit porttitor eu. Pellentesque ultrices tincidunt metus, a sagittis ipsum pretium ut. Vivamus sodales ligula molestie mauris auctor gravida. Quisque sollicitudin eros quis quam dignissim eleifend et ut orci. Aenean in vehicula justo. Phasellus viverra consequat turpis vel tempus. Sed vulputate sapien sit amet metus pharetra, iaculis tincidunt est commodo.</p>
            <p>Integer nec eleifend velit, a commodo ipsum. Aliquam venenatis urna ac nulla faucibus, non aliquet elit iaculis. Ut ut tortor vulputate, porttitor lacus ut, viverra ex. Vivamus ut suscipit massa. Curabitur a pellentesque enim, in bibendum odio. Etiam tristique tincidunt odio, sit amet pharetra urna accumsan id. Etiam eget consequat libero. Sed volutpat malesuada ultricies. Suspendisse vitae dui eu risus cursus tristique. Vivamus ac malesuada mauris. Cras a dignissim erat, eu facilisis magna. Phasellus elit dolor, porttitor vel velit quis, mollis sagittis sem. </p>
        </div>
    </post>
    <post>
        <title>Public Lorem Ipsum 4</title>
        <subtitle>264 words from Lipsum.com</subtitle>
        <author>
            <first_name>Joe</first_name>
            <last_name>Jerryfield</last_name>
            <email>joejfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>Abi</first_name>
                <last_name>Andres</last_name>
                <email>abiandres@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-medium</theme>
        <topics>
            <topic_name>Public Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>public</tag_name>
        </tags>
        <post_order>4</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vel metus sit amet dolor eleifend cursus id non tortor. Curabitur a malesuada libero. Suspendisse interdum dapibus nunc, ac cursus lacus semper nec. Cras faucibus auctor odio, vulputate gravida magna eleifend vel. Cras eu elit in enim faucibus dignissim a et purus. Vestibulum a sagittis neque. Praesent ut lectus diam. Fusce suscipit ac nunc vitae vulputate. Mauris dignissim ipsum mattis ligula ultricies blandit. Ut viverra sem at faucibus feugiat. Nullam lobortis elit in maximus sodales. In consequat erat vitae nisl porttitor rhoncus. Proin pulvinar dignissim purus, id sollicitudin justo luctus vestibulum.</p>
            <p>Morbi non tristique dolor. Sed pretium diam ut purus efficitur pellentesque. Phasellus malesuada at urna faucibus vestibulum. Donec gravida consequat metus nec finibus. Quisque nisl tellus, aliquam non tincidunt id, condimentum vel enim. Curabitur ornare, justo eu cursus lacinia, justo risus consectetur arcu, vitae posuere nisi elit non enim. Ut sagittis urna et lectus eleifend, a vestibulum ligula pellentesque. Donec porta interdum tellus vitae pellentesque. Maecenas efficitur vulputate neque in pharetra.</p>
            <p>Cras hendrerit felis at justo viverra, id gravida nibh ornare. Praesent nec nulla pretium tellus elementum ultrices. Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris sit amet suscipit metus, pharetra porta lacus. Integer nec tellus consequat, fringilla eros ut, pulvinar felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut volutpat, tellus eu vulputate tincidunt, ligula diam pulvinar sem, nec eleifend felis quam et velit. Aenean nec dictum est. Cras tincidunt interdum blandit. Vestibulum id porta nisi. In hac habitasse platea dictumst. Mauris eget varius lectus, sit amet pharetra est. </p>
        </div>
    </post>





    <post>
        <title>Welcome to Subscribed Lorem</title>
        <subtitle>First post in the subscribed Lorem Ipsum blog</subtitle>
        <author>
            <first_name>Liz</first_name>
            <last_name>Longerfield</last_name>
            <email>lizlfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-narrow</theme>
        <topics>
            <topic_name>Subscribed Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>0</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>This Blog is a Subscribed Topic. The content of these posts are generated through <a href='www.lipsum.com'>lipsum.com</a>. The purpose of this blog is the show that a subscribed topic on this site can be viewable by anyone who is subscribed for free. See the <a href='/topics/'>topics</a> page to view additional topics (often called Categories). Use the "View As" dropdown above to change who you are viewing as.</p>
        </div>
    </post>
    <post>
        <title>Subscribed Lorem Ipsum 1</title>
        <subtitle>446 words from Lipsum.com</subtitle>
        <author>
            <first_name>Liz</first_name>
            <last_name>Longerfield</last_name>
            <email>lizlfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-narrow</theme>
        <topics>
            <topic_name>Subscribed Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>1</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eget commodo felis. Aliquam tellus tortor, dignissim in cursus a, posuere eget metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In a sagittis dolor. Nunc efficitur urna eget arcu porttitor dignissim. Ut efficitur ultricies enim in suscipit. Mauris ut suscipit augue. Vivamus consequat risus et lectus congue, sit amet accumsan mauris iaculis. Maecenas rutrum commodo vulputate. Phasellus molestie ut ligula in rutrum. Donec sed nibh velit. Donec dictum est sem, in imperdiet ante suscipit at.</p>
            <p>Donec non lorem ac ipsum aliquet suscipit lobortis at urna. Nunc egestas turpis lorem, in euismod magna gravida ut. In sed molestie nisi. Vivamus non pulvinar lacus. Sed maximus urna eu lorem mollis, vel mollis turpis egestas. Vivamus eleifend metus tellus, a aliquam eros volutpat ac. Duis vitae porttitor nulla, vitae ultrices sapien. Mauris eu lorem felis. Suspendisse ultricies, enim in aliquet interdum, risus orci efficitur sem, non iaculis nunc velit id elit.</p>
            <p>Integer ac ipsum dolor. Sed quis diam in neque rhoncus pulvinar. Cras vel mi efficitur, vestibulum odio euismod, euismod lorem. In odio ipsum, laoreet vitae porttitor ut, cursus bibendum neque. Vestibulum neque mauris, convallis in semper nec, faucibus ut odio. Praesent et nunc ut quam semper finibus at vel sapien. Maecenas iaculis mauris at ante mattis aliquet at et nisi. Donec ac ipsum at ligula facilisis molestie a nec augue. Etiam sit amet orci euismod, porta diam in, varius nisl. Phasellus varius, lectus eget molestie facilisis, justo ipsum molestie ligula, sed accumsan lorem mauris a sem. Curabitur tortor erat, molestie nec pharetra at, accumsan sed velit. Curabitur molestie elit orci, sed lacinia nibh dapibus eu. Sed sem mauris, malesuada eget dapibus non, mollis sit amet tortor. Proin hendrerit, velit euismod iaculis commodo, diam urna pretium lacus, vel mattis libero tellus sollicitudin metus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed vel libero vel est dictum venenatis laoreet non odio.</p>
            <p>Vivamus gravida turpis in nibh gravida, non imperdiet elit eleifend. Praesent egestas euismod lorem ut vulputate. Phasellus luctus feugiat ex eget commodo. Suspendisse mattis, ante nec dapibus fermentum, ligula quam porttitor eros, vitae mattis mauris tellus id enim. Nullam placerat metus eget porta pretium. Pellentesque in nibh at ipsum imperdiet placerat ac et massa. Nulla aliquet ante quis tempor tristique. Praesent turpis nisl, fermentum ut feugiat sed, porttitor in elit. Nullam quis dui vehicula, sagittis mi vel, sodales eros. Pellentesque dolor ante, maximus eu dolor nec, aliquam iaculis magna. Vivamus eget dignissim dui. Morbi elementum maximus eleifend. Aliquam fringilla aliquam elementum. Pellentesque vestibulum ligula fermentum risus ultrices vulputate. Integer purus urna, sagittis a facilisis quis, consectetur nec mi.</p> 
        </div>
    </post>
    <post>
        <title>Subscribed Lorem Ipsum 2</title>
        <subtitle>341 words from Lipsum.com</subtitle>
       <author>
            <first_name>Liz</first_name>
            <last_name>Longerfield</last_name>
            <email>lizlfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-narrow</theme>
        <topics>
            <topic_name>Subscribed Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>2</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat, sem nec tincidunt sollicitudin, augue eros tempor diam, ac porta tortor quam varius dui. Sed eu nulla non ex laoreet fringilla vitae vitae velit. Donec lobortis odio a mi tempor, in congue nisl varius. Proin eu porttitor eros. Praesent hendrerit, ex id interdum ornare, massa lorem feugiat mauris, sed molestie nunc neque quis nulla. Nunc dictum nisi et odio pulvinar, non aliquam elit viverra. Fusce faucibus feugiat magna non molestie. Pellentesque ligula ex, vulputate non cursus sed, vestibulum id enim. Mauris sed posuere purus, in luctus leo.</p>
            <p>Aliquam enim risus, lacinia a maximus id, ullamcorper non felis. Sed ac nulla ut ipsum eleifend lobortis. Vivamus id pretium velit. Nunc cursus elit magna, non efficitur arcu auctor eu. Proin ac nunc sit amet metus eleifend cursus. Cras metus quam, gravida et turpis sit amet, feugiat efficitur dui. Aliquam eu porta tortor. Integer nisl lorem, convallis egestas rhoncus vitae, interdum id orci. Nam euismod lacinia libero, ac tincidunt erat consequat efficitur. Ut in ex a urna interdum maximus quis sed odio. Sed semper porta augue, vitae gravida lacus fermentum eu. Integer interdum lacus mauris. Vestibulum eu enim sit amet est mattis vehicula.</p>
            <p>Curabitur vestibulum sodales arcu nec vulputate. Integer rutrum est at nibh pellentesque, id bibendum tellus dictum. Vivamus in mollis arcu. Donec eget turpis aliquam, semper quam eget, ultricies tellus. Sed bibendum erat non justo pulvinar, vitae ultricies purus varius. Donec suscipit purus ipsum, et lacinia ex luctus a. Cras euismod quam eu orci consequat aliquam et at ex.</p>
            <p>Maecenas eget purus ut nisi semper volutpat nec non est. Aliquam eu metus sed odio accumsan congue eget volutpat nibh. Suspendisse potenti. Sed purus nulla, rutrum et metus at, congue egestas nisi. Mauris euismod non neque blandit ultrices. Donec euismod nunc est, vel pellentesque neque iaculis a. Proin pretium a neque id luctus. Vestibulum vitae est lacinia, malesuada augue sed, lobortis sapien. In pulvinar dui tincidunt velit maximus, sit amet semper libero egestas. Nulla molestie libero nec dolor facilisis, a elementum orci fermentum.</p>
        </div>
    </post>
    <post>
        <title>Subscribed Lorem Ipsum 3</title>
        <subtitle>239 words from Lipsum.com</subtitle>
       <author>
            <first_name>Liz</first_name>
            <last_name>Longerfield</last_name>
            <email>lizlfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-narrow</theme>
        <topics>
            <topic_name>Subscribed Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>3</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam leo nibh, auctor in hendrerit eu, iaculis quis odio. Praesent a mi eu est gravida venenatis. Nunc consectetur nibh vitae ante finibus blandit. Etiam mattis finibus efficitur. Nam semper, velit et auctor rutrum, lacus velit euismod lectus, vitae mattis sem ex ut massa. Aenean gravida dui ut orci accumsan, in tincidunt ex volutpat. Maecenas nec lobortis nibh, eu dictum velit. Morbi sit amet ultrices ex. Pellentesque volutpat sit amet dui at viverra.</p>
            <p>Mauris molestie pharetra nulla vitae laoreet. Vivamus ut ultrices purus, eget faucibus risus. Nunc tincidunt metus quis eleifend pellentesque. Vestibulum egestas velit purus, in posuere elit porttitor eu. Pellentesque ultrices tincidunt metus, a sagittis ipsum pretium ut. Vivamus sodales ligula molestie mauris auctor gravida. Quisque sollicitudin eros quis quam dignissim eleifend et ut orci. Aenean in vehicula justo. Phasellus viverra consequat turpis vel tempus. Sed vulputate sapien sit amet metus pharetra, iaculis tincidunt est commodo.</p>
            <p>Integer nec eleifend velit, a commodo ipsum. Aliquam venenatis urna ac nulla faucibus, non aliquet elit iaculis. Ut ut tortor vulputate, porttitor lacus ut, viverra ex. Vivamus ut suscipit massa. Curabitur a pellentesque enim, in bibendum odio. Etiam tristique tincidunt odio, sit amet pharetra urna accumsan id. Etiam eget consequat libero. Sed volutpat malesuada ultricies. Suspendisse vitae dui eu risus cursus tristique. Vivamus ac malesuada mauris. Cras a dignissim erat, eu facilisis magna. Phasellus elit dolor, porttitor vel velit quis, mollis sagittis sem. </p>
        </div>
    </post>
    <post>
        <title>Subscribed Lorem Ipsum 4</title>
        <subtitle>264 words from Lipsum.com</subtitle>
       <author>
            <first_name>Liz</first_name>
            <last_name>Longerfield</last_name>
            <email>lizlfield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Bright-narrow</theme>
        <topics>
            <topic_name>Subscribed Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>4</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vel metus sit amet dolor eleifend cursus id non tortor. Curabitur a malesuada libero. Suspendisse interdum dapibus nunc, ac cursus lacus semper nec. Cras faucibus auctor odio, vulputate gravida magna eleifend vel. Cras eu elit in enim faucibus dignissim a et purus. Vestibulum a sagittis neque. Praesent ut lectus diam. Fusce suscipit ac nunc vitae vulputate. Mauris dignissim ipsum mattis ligula ultricies blandit. Ut viverra sem at faucibus feugiat. Nullam lobortis elit in maximus sodales. In consequat erat vitae nisl porttitor rhoncus. Proin pulvinar dignissim purus, id sollicitudin justo luctus vestibulum.</p>
            <p>Morbi non tristique dolor. Sed pretium diam ut purus efficitur pellentesque. Phasellus malesuada at urna faucibus vestibulum. Donec gravida consequat metus nec finibus. Quisque nisl tellus, aliquam non tincidunt id, condimentum vel enim. Curabitur ornare, justo eu cursus lacinia, justo risus consectetur arcu, vitae posuere nisi elit non enim. Ut sagittis urna et lectus eleifend, a vestibulum ligula pellentesque. Donec porta interdum tellus vitae pellentesque. Maecenas efficitur vulputate neque in pharetra.</p>
            <p>Cras hendrerit felis at justo viverra, id gravida nibh ornare. Praesent nec nulla pretium tellus elementum ultrices. Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris sit amet suscipit metus, pharetra porta lacus. Integer nec tellus consequat, fringilla eros ut, pulvinar felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut volutpat, tellus eu vulputate tincidunt, ligula diam pulvinar sem, nec eleifend felis quam et velit. Aenean nec dictum est. Cras tincidunt interdum blandit. Vestibulum id porta nisi. In hac habitasse platea dictumst. Mauris eget varius lectus, sit amet pharetra est. </p>
        </div>
    </post>





    <post>
        <title>Welcome to Premium Lorem</title>
        <subtitle>First post in the Premium Lorem Ipsum blog</subtitle>
        <author>
            <first_name>Ashley</first_name>
            <last_name>Atfield</last_name>
            <email>ashleyafield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Dark-wide</theme>
        <topics>
            <topic_name>Premium Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>0</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>This Blog is a Premium Topic. The content of these posts are generated through <a href='www.lipsum.com'>lipsum.com</a>. The purpose of this blog is the show that a premium topic on this site can be viewable only by those who is have a premium subscription. See the <a href='/topics/'>topics</a> page to view additional topics (often called Categories). Use the "View As" dropdown above to change who you are viewing as.</p>
        </div>
    </post>
    <post>
        <title>Premium Lorem Ipsum 1</title>
        <subtitle>446 words from Lipsum.com</subtitle>
       <author>
            <first_name>Ashley</first_name>
            <last_name>Atfield</last_name>
            <email>ashleyafield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Dark-wide</theme>
        <topics>
            <topic_name>Premium Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>1</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras eget commodo felis. Aliquam tellus tortor, dignissim in cursus a, posuere eget metus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In a sagittis dolor. Nunc efficitur urna eget arcu porttitor dignissim. Ut efficitur ultricies enim in suscipit. Mauris ut suscipit augue. Vivamus consequat risus et lectus congue, sit amet accumsan mauris iaculis. Maecenas rutrum commodo vulputate. Phasellus molestie ut ligula in rutrum. Donec sed nibh velit. Donec dictum est sem, in imperdiet ante suscipit at.</p>
            <p>Donec non lorem ac ipsum aliquet suscipit lobortis at urna. Nunc egestas turpis lorem, in euismod magna gravida ut. In sed molestie nisi. Vivamus non pulvinar lacus. Sed maximus urna eu lorem mollis, vel mollis turpis egestas. Vivamus eleifend metus tellus, a aliquam eros volutpat ac. Duis vitae porttitor nulla, vitae ultrices sapien. Mauris eu lorem felis. Suspendisse ultricies, enim in aliquet interdum, risus orci efficitur sem, non iaculis nunc velit id elit.</p>
            <p>Integer ac ipsum dolor. Sed quis diam in neque rhoncus pulvinar. Cras vel mi efficitur, vestibulum odio euismod, euismod lorem. In odio ipsum, laoreet vitae porttitor ut, cursus bibendum neque. Vestibulum neque mauris, convallis in semper nec, faucibus ut odio. Praesent et nunc ut quam semper finibus at vel sapien. Maecenas iaculis mauris at ante mattis aliquet at et nisi. Donec ac ipsum at ligula facilisis molestie a nec augue. Etiam sit amet orci euismod, porta diam in, varius nisl. Phasellus varius, lectus eget molestie facilisis, justo ipsum molestie ligula, sed accumsan lorem mauris a sem. Curabitur tortor erat, molestie nec pharetra at, accumsan sed velit. Curabitur molestie elit orci, sed lacinia nibh dapibus eu. Sed sem mauris, malesuada eget dapibus non, mollis sit amet tortor. Proin hendrerit, velit euismod iaculis commodo, diam urna pretium lacus, vel mattis libero tellus sollicitudin metus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed vel libero vel est dictum venenatis laoreet non odio.</p>
            <p>Vivamus gravida turpis in nibh gravida, non imperdiet elit eleifend. Praesent egestas euismod lorem ut vulputate. Phasellus luctus feugiat ex eget commodo. Suspendisse mattis, ante nec dapibus fermentum, ligula quam porttitor eros, vitae mattis mauris tellus id enim. Nullam placerat metus eget porta pretium. Pellentesque in nibh at ipsum imperdiet placerat ac et massa. Nulla aliquet ante quis tempor tristique. Praesent turpis nisl, fermentum ut feugiat sed, porttitor in elit. Nullam quis dui vehicula, sagittis mi vel, sodales eros. Pellentesque dolor ante, maximus eu dolor nec, aliquam iaculis magna. Vivamus eget dignissim dui. Morbi elementum maximus eleifend. Aliquam fringilla aliquam elementum. Pellentesque vestibulum ligula fermentum risus ultrices vulputate. Integer purus urna, sagittis a facilisis quis, consectetur nec mi.</p> 
        </div>
    </post>
    <post>
        <title>Premium Lorem Ipsum 2</title>
        <subtitle>341 words from Lipsum.com</subtitle>
        <author>
            <first_name>Ashley</first_name>
            <last_name>Atfield</last_name>
            <email>ashleyafield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Dark-wide</theme>
        <topics>
            <topic_name>Premium Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>2</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc placerat, sem nec tincidunt sollicitudin, augue eros tempor diam, ac porta tortor quam varius dui. Sed eu nulla non ex laoreet fringilla vitae vitae velit. Donec lobortis odio a mi tempor, in congue nisl varius. Proin eu porttitor eros. Praesent hendrerit, ex id interdum ornare, massa lorem feugiat mauris, sed molestie nunc neque quis nulla. Nunc dictum nisi et odio pulvinar, non aliquam elit viverra. Fusce faucibus feugiat magna non molestie. Pellentesque ligula ex, vulputate non cursus sed, vestibulum id enim. Mauris sed posuere purus, in luctus leo.</p>
            <p>Aliquam enim risus, lacinia a maximus id, ullamcorper non felis. Sed ac nulla ut ipsum eleifend lobortis. Vivamus id pretium velit. Nunc cursus elit magna, non efficitur arcu auctor eu. Proin ac nunc sit amet metus eleifend cursus. Cras metus quam, gravida et turpis sit amet, feugiat efficitur dui. Aliquam eu porta tortor. Integer nisl lorem, convallis egestas rhoncus vitae, interdum id orci. Nam euismod lacinia libero, ac tincidunt erat consequat efficitur. Ut in ex a urna interdum maximus quis sed odio. Sed semper porta augue, vitae gravida lacus fermentum eu. Integer interdum lacus mauris. Vestibulum eu enim sit amet est mattis vehicula.</p>
            <p>Curabitur vestibulum sodales arcu nec vulputate. Integer rutrum est at nibh pellentesque, id bibendum tellus dictum. Vivamus in mollis arcu. Donec eget turpis aliquam, semper quam eget, ultricies tellus. Sed bibendum erat non justo pulvinar, vitae ultricies purus varius. Donec suscipit purus ipsum, et lacinia ex luctus a. Cras euismod quam eu orci consequat aliquam et at ex.</p>
            <p>Maecenas eget purus ut nisi semper volutpat nec non est. Aliquam eu metus sed odio accumsan congue eget volutpat nibh. Suspendisse potenti. Sed purus nulla, rutrum et metus at, congue egestas nisi. Mauris euismod non neque blandit ultrices. Donec euismod nunc est, vel pellentesque neque iaculis a. Proin pretium a neque id luctus. Vestibulum vitae est lacinia, malesuada augue sed, lobortis sapien. In pulvinar dui tincidunt velit maximus, sit amet semper libero egestas. Nulla molestie libero nec dolor facilisis, a elementum orci fermentum.</p>
        </div>
    </post>
    <post>
        <title>Premium Lorem Ipsum 3</title>
        <subtitle>239 words from Lipsum.com</subtitle>
       <author>
            <first_name>Ashley</first_name>
            <last_name>Atfield</last_name>
            <email>ashleyafield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Dark-wide</theme>
        <topics>
            <topic_name>Premium Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>3</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam leo nibh, auctor in hendrerit eu, iaculis quis odio. Praesent a mi eu est gravida venenatis. Nunc consectetur nibh vitae ante finibus blandit. Etiam mattis finibus efficitur. Nam semper, velit et auctor rutrum, lacus velit euismod lectus, vitae mattis sem ex ut massa. Aenean gravida dui ut orci accumsan, in tincidunt ex volutpat. Maecenas nec lobortis nibh, eu dictum velit. Morbi sit amet ultrices ex. Pellentesque volutpat sit amet dui at viverra.</p>
            <p>Mauris molestie pharetra nulla vitae laoreet. Vivamus ut ultrices purus, eget faucibus risus. Nunc tincidunt metus quis eleifend pellentesque. Vestibulum egestas velit purus, in posuere elit porttitor eu. Pellentesque ultrices tincidunt metus, a sagittis ipsum pretium ut. Vivamus sodales ligula molestie mauris auctor gravida. Quisque sollicitudin eros quis quam dignissim eleifend et ut orci. Aenean in vehicula justo. Phasellus viverra consequat turpis vel tempus. Sed vulputate sapien sit amet metus pharetra, iaculis tincidunt est commodo.</p>
            <p>Integer nec eleifend velit, a commodo ipsum. Aliquam venenatis urna ac nulla faucibus, non aliquet elit iaculis. Ut ut tortor vulputate, porttitor lacus ut, viverra ex. Vivamus ut suscipit massa. Curabitur a pellentesque enim, in bibendum odio. Etiam tristique tincidunt odio, sit amet pharetra urna accumsan id. Etiam eget consequat libero. Sed volutpat malesuada ultricies. Suspendisse vitae dui eu risus cursus tristique. Vivamus ac malesuada mauris. Cras a dignissim erat, eu facilisis magna. Phasellus elit dolor, porttitor vel velit quis, mollis sagittis sem. </p>
        </div>
    </post>
    <post>
        <title>Premium Lorem Ipsum 4</title>
        <subtitle>264 words from Lipsum.com</subtitle>
       <author>
            <first_name>Ashley</first_name>
            <last_name>Atfield</last_name>
            <email>ashleyafield@website.com</email>
        </author>
        <contributors>
            <user type='container'>
                <first_name>John</first_name>
                <last_name>Jackson</last_name>
                <email>johnjackson@website.com</email>
            </user>
            <user type='container'>
                <first_name>Lucas</first_name>
                <last_name>Moyer</last_name>
                <email>admin@moyeraudio.com</email>
            </user>
        </contributors>
        <theme>Dark-wide</theme>
        <topics>
            <topic_name>Premium Blog</topic_name>
        </topics>
        <tags>
            <tag_name>Lorem Ipsum</tag_name>
            <tag_name>demo</tag_name>
            <tag_name>subscriber</tag_name>
        </tags>
        <post_order>4</post_order>
        <cover_img_link></cover_img_link>
        <div class='content'>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vel metus sit amet dolor eleifend cursus id non tortor. Curabitur a malesuada libero. Suspendisse interdum dapibus nunc, ac cursus lacus semper nec. Cras faucibus auctor odio, vulputate gravida magna eleifend vel. Cras eu elit in enim faucibus dignissim a et purus. Vestibulum a sagittis neque. Praesent ut lectus diam. Fusce suscipit ac nunc vitae vulputate. Mauris dignissim ipsum mattis ligula ultricies blandit. Ut viverra sem at faucibus feugiat. Nullam lobortis elit in maximus sodales. In consequat erat vitae nisl porttitor rhoncus. Proin pulvinar dignissim purus, id sollicitudin justo luctus vestibulum.</p>
            <p>Morbi non tristique dolor. Sed pretium diam ut purus efficitur pellentesque. Phasellus malesuada at urna faucibus vestibulum. Donec gravida consequat metus nec finibus. Quisque nisl tellus, aliquam non tincidunt id, condimentum vel enim. Curabitur ornare, justo eu cursus lacinia, justo risus consectetur arcu, vitae posuere nisi elit non enim. Ut sagittis urna et lectus eleifend, a vestibulum ligula pellentesque. Donec porta interdum tellus vitae pellentesque. Maecenas efficitur vulputate neque in pharetra.</p>
            <p>Cras hendrerit felis at justo viverra, id gravida nibh ornare. Praesent nec nulla pretium tellus elementum ultrices. Interdum et malesuada fames ac ante ipsum primis in faucibus. Mauris sit amet suscipit metus, pharetra porta lacus. Integer nec tellus consequat, fringilla eros ut, pulvinar felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut volutpat, tellus eu vulputate tincidunt, ligula diam pulvinar sem, nec eleifend felis quam et velit. Aenean nec dictum est. Cras tincidunt interdum blandit. Vestibulum id porta nisi. In hac habitasse platea dictumst. Mauris eget varius lectus, sit amet pharetra est. </p>
        </div>
    </post> -->

</post_feed>