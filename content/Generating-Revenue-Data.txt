<p>This will handle both the subscriptions and the revenue</p>
<p>To do this we will follow the pattern:</p>
<ul><li>Make function to create a random subscriber email (junk letters and domain)</li>
<li>Generate a list of fake subscribers (I use 400) </li>
<li>Split subscribers into basic and premium subscribers (I intended to have more basic than premium, but my indexing at run time swapped them. It does not effect the project, and has been corrected in code)</li>
<li>Insert the subscribers into the Subscribes and Subscriber tables</li>
<li>For those selected to be Premium membership, insert email and *random pricepoints into the revenue table</li></ul>
 
<pre><code>
from generate_stats import generateTime
import customSQL
from customSQL import custom_SQL
import random
import string
 
def makeSubscriber():
   letters = string.ascii_letters
   numbers = string.digits
   name = ''.join(random.choice([random.choice(letters),random.choice(numbers)]) for i in range(15))
   com = random.choice(['com','org','net','web'])
   email = name+"@subscriber."+com
   return email
 
def subscribe(email_list,topic_list,membership):
   Q = custom_SQL()
   price_list = [*[10 for r in range(75)],*[20 for r in range(15)], *[40 for r in range(10)]]
   random.shuffle(price_list)
 
   for email in email_list:
       customSQL.put_subscriber(Q,email)
       randTopic = random.choice(topic_list)
       randDate = generateTime()
       customSQL.put_subscribes(Q,email,randTopic,membership,randDate)
       if membership == 'Premium':
           if email=='premiumSubscriber2@subs.org':
               continue
           customSQL.put_revenue(Q,email,random.choice(price_list),randDate)
  
   Q.commit()
   Q.close()
 
num_of_subscribers = 400
email_list = [makeSubscriber() for i in range(num_of_subscribers)]
 
 
Q = custom_SQL()
topics = customSQL.grab_all_topics(Q)['topic_name']
Q.close()
 
num_premium = random.randint(80,150)
 
basic_subs = email_list[num_premium:]
premium_subs = email_list[:num_premium]
 
 
 
subscribe(basic_subs,topics,'Subscriber')
subscribe(premium_subs,topics,'Premium')

</code></pre>